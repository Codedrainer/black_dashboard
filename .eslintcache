[{"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\index.js":"1","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\serviceWorker.js":"2","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\App.js":"3","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\context\\LayoutContext.js":"4","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\context\\UserContext.js":"5","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\themes\\index.js":"6","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\error\\Error.js":"8","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\login\\Login.js":"9","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\themes\\default.js":"10","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\login\\styles.js":"11","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\error\\styles.js":"12","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Layout\\styles.js":"13","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\charts\\Charts.js":"14","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\tables\\Tables.js":"15","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\icons\\Icons.js":"16","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\notifications\\Notifications.js":"17","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\maps\\Maps.js":"18","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js":"19","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\typography\\Typography.js":"20","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js":"21","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Header\\Header.js":"22","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\mock.js":"23","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\icons\\styles.js":"24","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\notifications\\styles.js":"25","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\maps\\styles.js":"26","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js":"27","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js":"28","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\styles.js":"29","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Header\\styles.js":"30","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js":"31","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Widget\\Widget.js":"32","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\styles.js":"33","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js":"34","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\typography\\styles.js":"35","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js":"36","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"37","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"38","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Notification\\Notification.js":"39","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js":"40","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js":"41","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\PageTitle\\styles.js":"42","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Widget\\styles.js":"43","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"44","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"45","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Notification\\styles.js":"46","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\UserAvatar\\styles.js":"47","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\Broadcast.js":"48","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\styles.js":"49","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\mock.js":"50","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\components\\Table\\Table.js":"51","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\components\\BigStat\\BigStat.js":"52","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\components\\BigStat\\styles.js":"53","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Modal\\Modal.js":"54","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Modal\\styles.js":"55","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\index.js":"56","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\broadcast.js":"57","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\utils\\axios-instance.js":"58","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\Chat.js":"59","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\mock.js":"60","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\styles.js":"61","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\components\\Table\\Table.js":"62","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\login.js":"63","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\chat.js":"64","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\utils\\use-interval.js":"65","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\utils\\date-parse.js":"66","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\styles.js":"67","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\mock.js":"68","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\components\\Table\\Table.js":"69","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\Users.js":"70","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\users.js":"71"},{"size":1025,"mtime":1640415697583,"results":"72","hashOfConfig":"73"},{"size":5083,"mtime":1639737339678,"results":"74","hashOfConfig":"73"},{"size":2232,"mtime":1641116492305,"results":"75","hashOfConfig":"73"},{"size":1444,"mtime":1639737339653,"results":"76","hashOfConfig":"73"},{"size":2042,"mtime":1641117204250,"results":"77","hashOfConfig":"73"},{"size":534,"mtime":1639737339679,"results":"78","hashOfConfig":"73"},{"size":4577,"mtime":1645116754159,"results":"79","hashOfConfig":"73"},{"size":1626,"mtime":1639737339662,"results":"80","hashOfConfig":"73"},{"size":11802,"mtime":1645251311971,"results":"81","hashOfConfig":"73"},{"size":3372,"mtime":1644163646304,"results":"82","hashOfConfig":"73"},{"size":3916,"mtime":1644148363662,"results":"83","hashOfConfig":"73"},{"size":1395,"mtime":1639737339663,"results":"84","hashOfConfig":"73"},{"size":737,"mtime":1642962515982,"results":"85","hashOfConfig":"73"},{"size":5790,"mtime":1639737339656,"results":"86","hashOfConfig":"73"},{"size":2146,"mtime":1639737339675,"results":"87","hashOfConfig":"73"},{"size":391433,"mtime":1639737339666,"results":"88","hashOfConfig":"73"},{"size":13893,"mtime":1640194397855,"results":"89","hashOfConfig":"73"},{"size":1010,"mtime":1639737339671,"results":"90","hashOfConfig":"73"},{"size":7247,"mtime":1645208139895,"results":"91","hashOfConfig":"73"},{"size":4632,"mtime":1639737339676,"results":"92","hashOfConfig":"73"},{"size":16226,"mtime":1640025684230,"results":"93","hashOfConfig":"73"},{"size":12152,"mtime":1644159956145,"results":"94","hashOfConfig":"73"},{"size":4288,"mtime":1639737339661,"results":"95","hashOfConfig":"73"},{"size":812,"mtime":1639737339667,"results":"96","hashOfConfig":"73"},{"size":1943,"mtime":1639737339674,"results":"97","hashOfConfig":"73"},{"size":178,"mtime":1639737339672,"results":"98","hashOfConfig":"73"},{"size":1396,"mtime":1639737339658,"results":"99","hashOfConfig":"73"},{"size":1909,"mtime":1639737339657,"results":"100","hashOfConfig":"73"},{"size":1426,"mtime":1643479407788,"results":"101","hashOfConfig":"73"},{"size":4043,"mtime":1643476017534,"results":"102","hashOfConfig":"73"},{"size":437,"mtime":1640025346764,"results":"103","hashOfConfig":"73"},{"size":2579,"mtime":1640027537662,"results":"104","hashOfConfig":"73"},{"size":3000,"mtime":1639737339662,"results":"105","hashOfConfig":"73"},{"size":1323,"mtime":1639737339660,"results":"106","hashOfConfig":"73"},{"size":389,"mtime":1639737339677,"results":"107","hashOfConfig":"73"},{"size":902,"mtime":1639737339647,"results":"108","hashOfConfig":"73"},{"size":4160,"mtime":1639737339660,"results":"109","hashOfConfig":"73"},{"size":4589,"mtime":1639737339647,"results":"110","hashOfConfig":"73"},{"size":3413,"mtime":1639737339643,"results":"111","hashOfConfig":"73"},{"size":3961,"mtime":1642956186857,"results":"112","hashOfConfig":"73"},{"size":620,"mtime":1639737339649,"results":"113","hashOfConfig":"73"},{"size":487,"mtime":1640025425369,"results":"114","hashOfConfig":"73"},{"size":1015,"mtime":1639737339652,"results":"115","hashOfConfig":"73"},{"size":1075,"mtime":1639737339660,"results":"116","hashOfConfig":"73"},{"size":1474,"mtime":1643479262760,"results":"117","hashOfConfig":"73"},{"size":1040,"mtime":1639737339644,"results":"118","hashOfConfig":"73"},{"size":291,"mtime":1639737339650,"results":"119","hashOfConfig":"73"},{"size":26741,"mtime":1644159956160,"results":"120","hashOfConfig":"73"},{"size":4227,"mtime":1642444259251,"results":"121","hashOfConfig":"73"},{"size":3787,"mtime":1640626522553,"results":"122","hashOfConfig":"73"},{"size":1965,"mtime":1643736209983,"results":"123","hashOfConfig":"73"},{"size":4160,"mtime":1639737339660,"results":"124","hashOfConfig":"125"},{"size":1075,"mtime":1639737339660,"results":"126","hashOfConfig":"125"},{"size":2181,"mtime":1644140113145,"results":"127","hashOfConfig":"73"},{"size":1031,"mtime":1640196111854,"results":"128","hashOfConfig":"73"},{"size":402,"mtime":1645118088581,"results":"129","hashOfConfig":"73"},{"size":5783,"mtime":1645117705421,"results":"130","hashOfConfig":"73"},{"size":800,"mtime":1645205124929,"results":"131","hashOfConfig":"73"},{"size":13317,"mtime":1644257712731,"results":"132","hashOfConfig":"73"},{"size":4402,"mtime":1640027099171,"results":"133","hashOfConfig":"73"},{"size":6446,"mtime":1644163657030,"results":"134","hashOfConfig":"73"},{"size":1323,"mtime":1639737339660,"results":"135","hashOfConfig":"73"},{"size":1796,"mtime":1645207297195,"results":"136","hashOfConfig":"73"},{"size":4710,"mtime":1644167354669,"results":"137","hashOfConfig":"73"},{"size":81,"mtime":1641409538306,"results":"138","hashOfConfig":"139"},{"size":777,"mtime":1642957630542,"results":"140","hashOfConfig":"73"},{"size":4227,"mtime":1642444259250,"results":"141","hashOfConfig":"73"},{"size":3787,"mtime":1640626522552,"results":"142","hashOfConfig":"73"},{"size":2421,"mtime":1645251474262,"results":"143","hashOfConfig":"73"},{"size":5110,"mtime":1645206310404,"results":"144","hashOfConfig":"73"},{"size":2770,"mtime":1645206109017,"results":"145","hashOfConfig":"73"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},"3zugm2",{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},"lriafv",{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"104o01u",{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\index.js",["303"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"../src/store/index\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <LayoutProvider>\r\n    <UserProvider>\r\n      <ThemeProvider theme={Themes.default}>\r\n        {/*<CssBaseline />*/}\r\n        <App />\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  </LayoutProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\serviceWorker.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\App.js",["304","305","306"],"import React, { useEffect } from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\nimport { useDispatch , useStore , useSelector} from \"react-redux\";\r\nimport { setAuth } from \"../store/reducer/login\";\r\n\r\n\r\n\r\nexport default function App() {\r\n  // global\r\n  const dispatch = useDispatch()\r\n\r\n  const isAuthenticated = useSelector((state)=>state.login.isAuthenticated)\r\n\r\n  useEffect(()=>{\r\n    let access_token =  localStorage.getItem(\"id_token\")\r\n    let obj = {\r\n      isAuthenticated : access_token !== null ? true : false ,\r\n      access_token : access_token\r\n    }\r\n    dispatch(setAuth(obj))\r\n  },[])\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\context\\LayoutContext.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\context\\UserContext.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\themes\\index.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Layout\\Layout.js",["307","308","309","310","311","312","313","314"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Broadcast from \"../../pages/broadcast\";\r\nimport Chat from \"../../pages/chat\";\r\nimport Users from \"../../pages/users/Users\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Broadcast} />\r\n              <Route path=\"/app/chat\" component={Chat} />\r\n              <Route path=\"/app/users\" component={Users} />\r\n              <Route path=\"/app/typography\" component={Typography} />\r\n              <Route path=\"/app/tables\" component={Tables} />\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/maps\" component={Maps} />\r\n              <Route path=\"/app/ui/icons\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} />\r\n            </Switch>\r\n            {/*bottom footer*/}\r\n\r\n            {/*<Box*/}\r\n            {/*  mt={5}*/}\r\n            {/*  width={\"100%\"}*/}\r\n            {/*  display={\"flex\"}*/}\r\n            {/*  alignItems={\"center\"}*/}\r\n            {/*  justifyContent=\"space-between\"*/}\r\n            {/*>*/}\r\n            {/*  <div>*/}\r\n            {/*    <Link*/}\r\n            {/*      color={'primary'}*/}\r\n            {/*      href={'#'}*/}\r\n            {/*      target={'_blank'}*/}\r\n            {/*      className={classes.link}*/}\r\n            {/*    >*/}\r\n            {/*      Notbot.com*/}\r\n            {/*    </Link>*/}\r\n            {/*  </div>*/}\r\n            {/*  <div>*/}\r\n            {/*    <Link*/}\r\n            {/*      href={'#'}*/}\r\n            {/*      target={'_blank'}*/}\r\n            {/*    >*/}\r\n            {/*      <IconButton aria-label=\"facebook\">*/}\r\n            {/*        <Icon*/}\r\n            {/*          path={FacebookIcon}*/}\r\n            {/*          size={1}*/}\r\n            {/*          color=\"#6E6E6E99\"*/}\r\n            {/*        />*/}\r\n            {/*      </IconButton>*/}\r\n            {/*    </Link>*/}\r\n            {/*    <Link*/}\r\n            {/*      href={'#'}*/}\r\n            {/*      target={'_blank'}*/}\r\n            {/*    >*/}\r\n            {/*      <IconButton aria-label=\"twitter\">*/}\r\n            {/*        <Icon*/}\r\n            {/*          path={TwitterIcon}*/}\r\n            {/*          size={1}*/}\r\n            {/*          color=\"#6E6E6E99\"*/}\r\n            {/*        />*/}\r\n            {/*      </IconButton>*/}\r\n            {/*    </Link>*/}\r\n            {/*    <Link*/}\r\n            {/*      href={'#'}*/}\r\n            {/*      target={'_blank'}*/}\r\n            {/*    >*/}\r\n            {/*      <IconButton*/}\r\n            {/*        aria-label=\"github\"*/}\r\n            {/*        style={{marginRight: -12}}*/}\r\n            {/*      >*/}\r\n            {/*        <Icon*/}\r\n            {/*          path={GithubIcon}*/}\r\n            {/*          size={1}*/}\r\n            {/*          color=\"#6E6E6E99\"*/}\r\n            {/*        />*/}\r\n            {/*      </IconButton>*/}\r\n            {/*    </Link>*/}\r\n            {/*  </div>*/}\r\n            {/*</Box>*/}\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\error\\Error.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\login\\Login.js",["315","316","317","318","319","320","321","322","323","324"],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\themes\\default.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\login\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\error\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Layout\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\charts\\Charts.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\notifications\\Notifications.js",["325"],"import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Modal from \"../../components/Notification\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport Notification from \"../../components/Notification\";\r\n\r\nconst positions = [\r\n  toast.POSITION.TOP_LEFT,\r\n  toast.POSITION.TOP_CENTER,\r\n  toast.POSITION.TOP_RIGHT,\r\n  toast.POSITION.BOTTOM_LEFT,\r\n  toast.POSITION.BOTTOM_CENTER,\r\n  toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nexport default function NotificationsPage(props) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [notificationsPosition, setNotificationPosition] = useState(2);\r\n  var [errorToastId, setErrorToastId] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Notifications\" />\r\n      <Grid container spacing={4}>\r\n        <ToastContainer\r\n          className={classes.toastsContainer}\r\n          closeButton={\r\n            <CloseButton className={classes.notificationCloseButton} />\r\n          }\r\n          closeOnClick={false}\r\n          progressClassName={classes.notificationProgress}\r\n        />\r\n        <Grid item xs={12}>\r\n        <Widget disableWidgetMenu>\r\n          <Grid container item xs={12}>\r\n          <Grid item xs={4}>\r\n          <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\r\n            <Typography>\r\n              There are few position options available for notifications. You\r\n              can click any of them to change notifications position:\r\n            </Typography>\r\n            <div className={classes.layoutContainer}>\r\n              <div className={classes.layoutButtonsRow}>\r\n                <button\r\n                  onClick={() => changeNotificationPosition(0)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(1)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(2)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\r\n                  })}\r\n                />\r\n              </div>\r\n              <Typography className={classes.layoutText} size=\"md\">\r\n                Click any position\r\n              </Typography>\r\n              <div className={classes.layoutButtonsRow}>\r\n                <button\r\n                  onClick={() => changeNotificationPosition(3)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(4)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(5)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\r\n                  })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n          <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\r\n            <Typography>\r\n              Different types of notifications for lost of use cases. Custom\r\n              classes are also supported.\r\n            </Typography>\r\n            <div className={classes.buttonsContainer}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => handleNotificationCall(\"info\")}\r\n                className={classnames(classes.notificationCallButton)}\r\n              >\r\n                Info Message\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => handleNotificationCall(\"error\")}\r\n                className={classnames(classes.notificationCallButton)}\r\n              >\r\n                Error + Retry Message\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={() => handleNotificationCall(\"success\")}\r\n                className={classnames(classes.notificationCallButton)}\r\n              >\r\n                Success Message\r\n              </Button>\r\n            </div>\r\n          </Widget>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n          <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\r\n            <Typography>\r\n              Notifications are created with the help of{\" \"}\r\n              <a href=\"https://github.com/fkhadra/react-toastify\">\r\n                react-toastify\r\n              </a>\r\n            </Typography>\r\n            <div className={classes.codeContainer}>\r\n              <SyntaxHighlighter\r\n                className={classes.codeComponent}\r\n                language=\"javascript\"\r\n                style={docco}\r\n              >{`\r\n  // import needed components, functions and styles\r\n  import { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\n  const Page = () => {\r\n    <div>\r\n      <ToastContainer />\r\n      <button onClick={() => toast('Toast Message')}>\r\n        show notification\r\n      </button>\r\n    </div>\r\n  };\r\n            `}</SyntaxHighlighter>\r\n              <Typography variant=\"caption\">\r\n                For more API information refer to the library documentation\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n            </Grid>\r\n          </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Widget title=\"Modal Types Examples\" disableWidgetMenu>\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"message\"\r\n              message=\"Thanks for Checking out Messenger\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"feedback\"\r\n              message=\"New user feedback received\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"customer\"\r\n              message=\"New customer is registered\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"shipped\"\r\n              message=\"The order was shipped\"\r\n              variant=\"contained\"\r\n              color=\"warning\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"delivered\"\r\n              message=\"The order was delivered\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"defence\"\r\n              message=\"5 Defence alerts\"\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n            />\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Widget title=\"Modal Types Examples\" disableWidgetMenu>\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"report\"\r\n              message=\"New report has been received\"\r\n              color=\"secondary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"feedback\"\r\n              message=\"New user feedback received\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"shipped\"\r\n              message=\"The item was shipped\"\r\n              color=\"success\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"message\"\r\n              message=\"The new message from user @nahawaii\"\r\n              color=\"warning\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"upload\"\r\n              message=\"Your file is ready to upload\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"disc\"\r\n              message=\"The disc is full\"\r\n              color=\"info\"\r\n            />\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Widget title=\"Modal Types Examples\" disableWidgetMenu>\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"report\"\r\n              message=\"New report has been received\"\r\n              variant=\"rounded\"\r\n              color=\"secondary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"feedback\"\r\n              message=\"New user feedback received\"\r\n              variant=\"rounded\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"shipped\"\r\n              message=\"The item was shipped\"\r\n              variant=\"rounded\"\r\n              color=\"success\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"message\"\r\n              message=\"The new message from user @nahawaii\"\r\n              variant=\"rounded\"\r\n              color=\"warning\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"upload\"\r\n              message=\"Your file is ready to upload\"\r\n              variant=\"rounded\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"disc\"\r\n              message=\"The disc is full\"\r\n              variant=\"rounded\"\r\n              color=\"info\"\r\n            />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  // #############################################################\r\n  function sendNotification(componentProps, options) {\r\n    return toast(\r\n      <Notification\r\n        {...componentProps}\r\n        className={classes.notificationComponent}\r\n      />,\r\n      options,\r\n    );\r\n  }\r\n\r\n  function retryErrorNotification() {\r\n    var componentProps = {\r\n      type: \"message\",\r\n      message: \"Message was sent successfully!\",\r\n      variant: \"contained\",\r\n      color: \"success\",\r\n    };\r\n    toast.update(errorToastId, {\r\n      render: <Notification {...componentProps} />,\r\n      type: \"success\",\r\n    });\r\n    setErrorToastId(null);\r\n  }\r\n\r\n  function handleNotificationCall(notificationType) {\r\n    var componentProps;\r\n\r\n    if (errorToastId && notificationType === \"error\") return;\r\n\r\n    switch (notificationType) {\r\n      case \"info\":\r\n        componentProps = {\r\n          type: \"feedback\",\r\n          message: \"New user feedback received\",\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        };\r\n        break;\r\n      case \"error\":\r\n        componentProps = {\r\n          type: \"message\",\r\n          message: \"Message was not sent!\",\r\n          variant: \"contained\",\r\n          color: \"secondary\",\r\n          extraButton: \"Resend\",\r\n          extraButtonClick: retryErrorNotification,\r\n        };\r\n        break;\r\n      default:\r\n        componentProps = {\r\n          type: \"shipped\",\r\n          message: \"The item was shipped\",\r\n          variant: \"contained\",\r\n          color: \"success\",\r\n        };\r\n    }\r\n\r\n    var toastId = sendNotification(componentProps, {\r\n      type: notificationType,\r\n      position: positions[notificationsPosition],\r\n      progressClassName: classes.progress,\r\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n      className: classes.notification,\r\n    });\r\n\r\n    if (notificationType === \"error\") setErrorToastId(toastId);\r\n  }\r\n\r\n  function changeNotificationPosition(positionId) {\r\n    setNotificationPosition(positionId);\r\n  }\r\n}\r\n\r\n// #############################################################\r\nfunction CloseButton({ closeToast, className }) {\r\n  return <CloseIcon className={className} onClick={closeToast} />;\r\n}\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js",["326","327","328","329","330","331","332","333","334","335"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  RecordVoiceOver as SurroundSoundIcon,\r\n  Sms as ChatIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport jwtDecode from \"jwt-decode\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Broadcast History\", link: \"/app/dashboard\", icon: <SurroundSoundIcon /> },\r\n  { id: 1, label: \"Individual Chat\", link: \"/app/chat\", icon: <ChatIcon /> },\r\n  // {\r\n  //   id: 1,\r\n  //   label: \"Typography\",\r\n  //   link: \"/app/typography\",\r\n  //   icon: <TypographyIcon />,\r\n  // },\r\n  // { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"Notifications\",\r\n  //   link: \"/app/notifications\",\r\n  //   icon: <NotificationsIcon />,\r\n  // },\r\n  // {\r\n  //   id: 4,\r\n  //   label: \"UI Elements\",\r\n  //   link: \"/app/ui\",\r\n  //   icon: <UIElementsIcon />,\r\n  //   children: [\r\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\r\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\r\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\r\n  //   ],\r\n  // },\r\n  // { id: 5, type: \"divider\" },\r\n  // { id: 6, type: \"title\", label: \"HELP\" },\r\n  // { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  // { id: 10, type: \"divider\" },\r\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  // {\r\n  //   id: 12,\r\n  //   label: \"My recent\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\r\n  // },\r\n  // {\r\n  //   id: 13,\r\n  //   label: \"Starred\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\r\n  // },\r\n  // {\r\n  //   id: 14,\r\n  //   label: \"Background\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  // },\r\n];\r\nconst adminStructure = [\r\n  { id: 0, label: \"Broadcast History\", link: \"/app/dashboard\", icon: <SurroundSoundIcon /> },\r\n  { id: 1, label: \"Individual Chat\", link: \"/app/chat\", icon: <ChatIcon /> },\r\n  { id: 3, label: \"Users\", link: \"/app/users\", icon: <ChatIcon /> },\r\n  // {\r\n  //   id: 1,\r\n  //   label: \"Typography\",\r\n  //   link: \"/app/typography\",\r\n  //   icon: <TypographyIcon />,\r\n  // },\r\n  // { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"Notifications\",\r\n  //   link: \"/app/notifications\",\r\n  //   icon: <NotificationsIcon />,\r\n  // },\r\n  // {\r\n  //   id: 4,\r\n  //   label: \"UI Elements\",\r\n  //   link: \"/app/ui\",\r\n  //   icon: <UIElementsIcon />,\r\n  //   children: [\r\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\r\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\r\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\r\n  //   ],\r\n  // },\r\n  // { id: 5, type: \"divider\" },\r\n  // { id: 6, type: \"title\", label: \"HELP\" },\r\n  // { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  // { id: 10, type: \"divider\" },\r\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  // {\r\n  //   id: 12,\r\n  //   label: \"My recent\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\r\n  // },\r\n  // {\r\n  //   id: 13,\r\n  //   label: \"Starred\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\r\n  // },\r\n  // {\r\n  //   id: 14,\r\n  //   label: \"Background\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  // },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  const accessToken = useSelector((state)=>state.login.access_token)\r\n  const [jDecode , setJDecode] = useState(\"\")\r\n  useEffect(()=>{\r\n    if(accessToken){\r\n      const jDecode = jwtDecode(accessToken)\r\n      setJDecode(jDecode)\r\n    }\r\n  },[accessToken])\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames(classes.paper,{\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n\r\n        {jDecode?.sub == \"admin@signatureglobal.in\" ?\r\n          <>\r\n            {adminStructure.map(link => (\r\n              <SidebarLink\r\n                key={link.id}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                {...link}\r\n              />\r\n            ))}\r\n          </>\r\n          :\r\n          <>\r\n            {structure.map(link => (\r\n              <SidebarLink\r\n                key={link.id}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                {...link}\r\n              />\r\n            ))}\r\n          </>\r\n        }\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\typography\\Typography.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Header\\Header.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link, MuiThemeProvider, createMuiTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport { useDispatch , useStore , useSelector} from \"react-redux\";\r\nimport {logout} from \"../../store/reducer/login\"\r\n\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Broadcast\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  const AppBarTheme = (theme)=>createMuiTheme({\r\n    overrides:{\r\n      MuiAppBar:{\r\n        root:{\r\n          backgroundColor:theme.palette.primary.main\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <MuiThemeProvider theme={AppBarTheme}>\r\n      <AppBar position=\"fixed\" className={classes.appBar} color={\"inherit\"}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={() => toggleSidebar(layoutDispatch)}\r\n            className={classNames(\r\n              classes.headerMenuButtonSandwich,\r\n              classes.headerMenuButtonCollapse,\r\n            )}\r\n          >\r\n            {layoutState.isSidebarOpened ? (\r\n              <ArrowBackIcon\r\n                classes={{\r\n                  root: classNames(\r\n                    classes.headerIcon,\r\n                    classes.headerIconCollapse,\r\n                  ),\r\n                }}\r\n              />\r\n            ) : (\r\n              <MenuIcon\r\n                classes={{\r\n                  root: classNames(\r\n                    classes.headerIcon,\r\n                    classes.headerIconCollapse,\r\n                  ),\r\n                }}\r\n              />\r\n            )}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n            Whatsapp Dashboard\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          {/*<div*/}\r\n          {/*  className={classNames(classes.search, {*/}\r\n          {/*    [classes.searchFocused]: isSearchOpen,*/}\r\n          {/*  })}*/}\r\n          {/*>*/}\r\n          {/*  <div*/}\r\n          {/*    className={classNames(classes.searchIcon, {*/}\r\n          {/*      [classes.searchIconOpened]: isSearchOpen,*/}\r\n          {/*    })}*/}\r\n          {/*    onClick={() => setSearchOpen(!isSearchOpen)}*/}\r\n          {/*  >*/}\r\n          {/*    <SearchIcon classes={{ root: classes.headerIcon }} />*/}\r\n          {/*  </div>*/}\r\n          {/*  <InputBase*/}\r\n          {/*    placeholder=\"Search…\"*/}\r\n          {/*    classes={{*/}\r\n          {/*      root: classes.inputRoot,*/}\r\n          {/*      input: classes.inputInput,*/}\r\n          {/*    }}*/}\r\n          {/*  />*/}\r\n          {/*</div>*/}\r\n          {/*<IconButton*/}\r\n          {/*  color=\"inherit\"*/}\r\n          {/*  aria-haspopup=\"true\"*/}\r\n          {/*  aria-controls=\"mail-menu\"*/}\r\n          {/*  onClick={e => {*/}\r\n          {/*    setNotificationsMenu(e.currentTarget);*/}\r\n          {/*    setIsNotificationsUnread(false);*/}\r\n          {/*  }}*/}\r\n          {/*  className={classes.headerMenuButton}*/}\r\n          {/*>*/}\r\n          {/*  <Badge*/}\r\n          {/*    badgeContent={isNotificationsUnread ? notifications.length : null}*/}\r\n          {/*    color=\"warning\"*/}\r\n          {/*  >*/}\r\n          {/*    <NotificationsIcon classes={{ root: classes.headerIcon }} />*/}\r\n          {/*  </Badge>*/}\r\n          {/*</IconButton>*/}\r\n          {/*<IconButton*/}\r\n          {/*  color=\"inherit\"*/}\r\n          {/*  aria-haspopup=\"true\"*/}\r\n          {/*  aria-controls=\"mail-menu\"*/}\r\n          {/*  onClick={e => {*/}\r\n          {/*    setMailMenu(e.currentTarget);*/}\r\n          {/*    setIsMailsUnread(false);*/}\r\n          {/*  }}*/}\r\n          {/*  className={classes.headerMenuButton}*/}\r\n          {/*>*/}\r\n          {/*  <Badge*/}\r\n          {/*    badgeContent={isMailsUnread ? messages.length : null}*/}\r\n          {/*    color=\"secondary\"*/}\r\n          {/*  >*/}\r\n          {/*    <MailIcon classes={{ root: classes.headerIcon }} />*/}\r\n          {/*  </Badge>*/}\r\n          {/*</IconButton>*/}\r\n          <IconButton\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            className={classes.headerMenuButton}\r\n            aria-controls=\"profile-menu\"\r\n            onClick={e => setProfileMenu(e.currentTarget)}\r\n          >\r\n            <AccountIcon classes={{ root: classes.headerIcon }} />\r\n          </IconButton>\r\n          {/*<Menu*/}\r\n          {/*  id=\"mail-menu\"*/}\r\n          {/*  open={Boolean(mailMenu)}*/}\r\n          {/*  anchorEl={mailMenu}*/}\r\n          {/*  onClose={() => setMailMenu(null)}*/}\r\n          {/*  MenuListProps={{ className: classes.headerMenuList }}*/}\r\n          {/*  className={classes.headerMenu}*/}\r\n          {/*  classes={{ paper: classes.profileMenu }}*/}\r\n          {/*  disableAutoFocusItem*/}\r\n          {/*>*/}\r\n          {/*<div className={classes.profileMenuUser}>*/}\r\n          {/*  <Typography variant=\"h4\" weight=\"medium\">*/}\r\n          {/*    New Messages*/}\r\n          {/*  </Typography>*/}\r\n          {/*  <Typography*/}\r\n          {/*    className={classes.profileMenuLink}*/}\r\n          {/*    component=\"a\"*/}\r\n          {/*    color=\"secondary\"*/}\r\n          {/*  >*/}\r\n          {/*    {messages.length} New Messages*/}\r\n          {/*  </Typography>*/}\r\n          {/*</div>*/}\r\n          {/*{messages.map(message => (*/}\r\n          {/*  <MenuItem key={message.id} className={classes.messageNotification}>*/}\r\n          {/*    <div className={classes.messageNotificationSide}>*/}\r\n          {/*      <UserAvatar color={message.variant} name={message.name} />*/}\r\n          {/*      <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">*/}\r\n          {/*        {message.time}*/}\r\n          {/*      </Typography>*/}\r\n          {/*    </div>*/}\r\n          {/*    <div*/}\r\n          {/*      className={classNames(*/}\r\n          {/*        classes.messageNotificationSide,*/}\r\n          {/*        classes.messageNotificationBodySide,*/}\r\n          {/*      )}*/}\r\n          {/*    >*/}\r\n          {/*      <Typography weight=\"medium\" gutterBottom>*/}\r\n          {/*        {message.name}*/}\r\n          {/*      </Typography>*/}\r\n          {/*      <Typography color=\"text\" colorBrightness=\"secondary\">*/}\r\n          {/*        {message.message}*/}\r\n          {/*      </Typography>*/}\r\n          {/*    </div>*/}\r\n          {/*  </MenuItem>*/}\r\n          {/*))}*/}\r\n          {/*  <Fab*/}\r\n          {/*    variant=\"extended\"*/}\r\n          {/*    color=\"primary\"*/}\r\n          {/*    aria-label=\"Add\"*/}\r\n          {/*    className={classes.sendMessageButton}*/}\r\n          {/*  >*/}\r\n          {/*    Send New Message*/}\r\n          {/*    <SendIcon className={classes.sendButtonIcon} />*/}\r\n          {/*  </Fab>*/}\r\n          {/*</Menu>*/}\r\n          {/*<Menu*/}\r\n          {/*  id=\"notifications-menu\"*/}\r\n          {/*  open={Boolean(notificationsMenu)}*/}\r\n          {/*  anchorEl={notificationsMenu}*/}\r\n          {/*  onClose={() => setNotificationsMenu(null)}*/}\r\n          {/*  className={classes.headerMenu}*/}\r\n          {/*  disableAutoFocusItem*/}\r\n          {/*>*/}\r\n          {/*  {notifications.map(notification => (*/}\r\n          {/*    <MenuItem*/}\r\n          {/*      key={notification.id}*/}\r\n          {/*      onClick={() => setNotificationsMenu(null)}*/}\r\n          {/*      className={classes.headerMenuItem}*/}\r\n          {/*    >*/}\r\n          {/*      <Notification {...notification} typographyVariant=\"inherit\" />*/}\r\n          {/*    </MenuItem>*/}\r\n          {/*  ))}*/}\r\n          {/*</Menu>*/}\r\n          <Menu\r\n            id=\"profile-menu\"\r\n            open={Boolean(profileMenu)}\r\n            anchorEl={profileMenu}\r\n            onClose={() => setProfileMenu(null)}\r\n            className={classes.headerMenu}\r\n            classes={{ paper: classes.profileMenu }}\r\n            disableAutoFocusItem\r\n          >\r\n            {/*<div className={classes.profileMenuUser}>*/}\r\n            {/*  <Typography variant=\"h4\" weight=\"medium\">*/}\r\n            {/*    John Smith*/}\r\n            {/*  </Typography>*/}\r\n            {/*  <Typography*/}\r\n            {/*    className={classes.profileMenuLink}*/}\r\n            {/*    component=\"a\"*/}\r\n            {/*    color=\"primary\"*/}\r\n            {/*    href=\"https://flatlogic.com\"*/}\r\n            {/*  >*/}\r\n            {/*    Flalogic.com*/}\r\n            {/*  </Typography>*/}\r\n            {/*</div>*/}\r\n            {/*<MenuItem*/}\r\n            {/*  className={classNames(*/}\r\n            {/*    classes.profileMenuItem,*/}\r\n            {/*    classes.headerMenuItem,*/}\r\n            {/*  )}*/}\r\n            {/*>*/}\r\n            {/*  <AccountIcon className={classes.profileMenuIcon} /> Profile*/}\r\n            {/*</MenuItem>*/}\r\n            {/*<MenuItem*/}\r\n            {/*  className={classNames(*/}\r\n            {/*    classes.profileMenuItem,*/}\r\n            {/*    classes.headerMenuItem,*/}\r\n            {/*  )}*/}\r\n            {/*>*/}\r\n            {/*  <AccountIcon className={classes.profileMenuIcon} /> Tasks*/}\r\n            {/*</MenuItem>*/}\r\n            {/*<MenuItem*/}\r\n            {/*  className={classNames(*/}\r\n            {/*    classes.profileMenuItem,*/}\r\n            {/*    classes.headerMenuItem,*/}\r\n            {/*  )}*/}\r\n            {/*>*/}\r\n            {/*  <AccountIcon className={classes.profileMenuIcon} /> Messages*/}\r\n            {/*</MenuItem>*/}\r\n            <div className={classes.profileMenuUser}>\r\n              <Typography\r\n                className={classes.profileMenuLink}\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  dispatch(logout())\r\n                  props.history.push(\"/login\")\r\n                }}\r\n              >\r\n                Sign Out\r\n              </Typography>\r\n            </div>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\icons\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\maps\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Header\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\typography\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Widget\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Notification\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\Broadcast.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button, Box, TextField, InputLabel, Divider, MuiThemeProvider, createMuiTheme,\r\n} from \"@material-ui/core\";\r\nimport  Autocomplete from  \"@material-ui/lab/Autocomplete\"\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { CloudUpload, Description } from \"@material-ui/icons\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport ImageShowCase from \"../../images/image-column.PNG\"\r\nimport AudioShowCase from \"../../images/audio.PNG\"\r\nimport VideoShowCase from \"../../images/video-column.PNG\"\r\nimport PhoneShowCase from \"../../images/phone-number.PNG\"\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Table from \"./components/Table/Table\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useDispatch , useStore , useSelector} from \"react-redux\";\r\nimport {\r\n  setTemplateMessages,\r\n  fetchTemplateMessages,\r\n  sendTemplateMessage,\r\n  sendBulkUploadTemplateMessage,\r\n  fetchVariablesFromTemplates, sendVariableTemplates, userHistoryData,\r\n} from \"../../store/reducer/broadcast\";\r\nimport PhoneInput from \"react-phone-number-input\"\r\nimport 'react-phone-number-input/style.css'\r\nimport {isValidPhoneNumber} from \"react-phone-number-input\"\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { timeConverter } from \"../../utils/date-parse\";\r\n\r\n\r\nconst FirstStep = ({data , onChangeBroadcastName , onChangeTemplate , selectedTemplate, broadcastName})=>{\r\n  return(\r\n    <div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"broadcast-name\"\r\n          label=\"Broadcast Name\"\r\n          value={broadcastName}\r\n          type=\"text\"\r\n          variant={\"outlined\"}\r\n          onChange={onChangeBroadcastName}\r\n          size={\"medium\"}\r\n          fullWidth\r\n        /><br/><br/>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          freeSolo\r\n          size={\"small\"}\r\n          options={data}\r\n          onChange={onChangeTemplate}\r\n          getOptionLabel={(option) => option.name.toString()\r\n            .replaceAll(\"_\",\" \")+\"_\".toString()\r\n            .concat((option.language.toString()))}\r\n          fullWidth\r\n          renderInput={(params) =>\r\n            <TextField {...params} label=\"Select Template\" variant=\"outlined\"/>}\r\n        />\r\n    </div>\r\n  )\r\n}\r\nconst PhoneNumberStep = ({data , onChangeNumber ,number, onChangeTemplate , classes , selectedTemplate})=>{\r\n  return(\r\n    <div>\r\n      <Typography size={\"sm\"}>Enter phone number</Typography>\r\n      <PhoneInput\r\n        style={{marginTop:\"5px\"}}\r\n        international\r\n        onCountryChange={(countryCode) => {\r\n          console.log(countryCode)\r\n        }}\r\n        defaultCountry=\"IN\"\r\n        autoComplete=\"on\"\r\n        value={number}\r\n        className={classes.phoneNumberInput}\r\n        countryCallingCodeEditable={false}\r\n        onChange={onChangeNumber}\r\n        error={\r\n          number\r\n            ? isValidPhoneNumber(number)\r\n              ? undefined\r\n              : \"Invalid Phone Number\"\r\n            : ``\r\n        }\r\n      />\r\n      <br/>\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={data}\r\n        size={\"small\"}\r\n        onChange={onChangeTemplate}\r\n        getOptionLabel={(option) => option.name.toString()\r\n          .replaceAll(\"_\",\" \")+\"_\".toString()\r\n          .concat((option.language.toString()))}\r\n        fullWidth\r\n        renderInput={(params) =>\r\n          <TextField {...params} label=\"Select Template\" variant=\"outlined\"/>}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nconst SecondStep = (props)=>{\r\n  const {classes , onFileLoad , file} = props\r\n  return(\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Typography className={classes.text}\r\n                    size=\"xs\"\r\n                    gutterBottom>Selected document</Typography>\r\n        <Box display={\"flex\"} alignItems={\"center\"}>\r\n          <Description color={\"primary\"}/>\r\n          <Typography weight=\"bold\" color=\"primary\" className={classes.text}>\r\n            {file?.name ? file?.name : \"No Files\"}\r\n          </Typography>\r\n        </Box>\r\n        <br/>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div>\r\n          <input\r\n            accept=\"*\"\r\n            className={classes.inputFile}\r\n            id=\"contained-button-file\"\r\n            onChange={onFileLoad}\r\n            disabled={file !== undefined}\r\n            type=\"file\"\r\n          />\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\"\r\n                    startIcon={<Description/>}\r\n                    disabled={file !== undefined}\r\n                    className={classes.buttonPrimary}\r\n                    color={\"primary\"}  component=\"span\">\r\n              Choose Files\r\n            </Button>\r\n          </label>\r\n        </div>\r\n      </Grid>\r\n      <Grid>\r\n        <Button variant=\"contained\"\r\n                startIcon={<CloudUpload/>}\r\n                className={classes.buttonSecondary}\r\n                disabled={file == undefined}\r\n                color={\"secondary\"} component=\"span\">\r\n          Upload File\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nconst ThirdStep = (props)=>{\r\n  const {classes , onFileLoad , file , onUploadCSV , variables} = props\r\n\r\n  return(\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Typography className={classes.text}\r\n                    variant={\"subtitle1\"}\r\n                    gutterBottom>You have to upload CSV file with extension(.csv).</Typography>\r\n      <Box display={\"flex\"} alignItems={\"center\"}>\r\n          <Description color={\"primary\"}/>\r\n          <Typography weight=\"bold\" color=\"primary\" className={classes.text}>\r\n            {file?.name ? file?.name : \"No Files\"}\r\n          </Typography>\r\n        </Box>\r\n        <br/>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div>\r\n          <input\r\n            accept=\".xslx,.csv,.xls,.png\"\r\n            className={classes.inputFile}\r\n            id=\"contained-button-file\"\r\n            onChange={onFileLoad}\r\n            disabled={file !== undefined}\r\n            type=\"file\"\r\n          />\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\"\r\n                    startIcon={<Description/>}\r\n                    disabled={file !== undefined}\r\n                    className={classes.buttonPrimary}\r\n                    color={\"primary\"}  component=\"span\">\r\n              Choose Files\r\n            </Button>\r\n          </label>\r\n        </div>\r\n      </Grid>\r\n      <br/><br/>\r\n      <br/>\r\n      <Typography variant={\"subtitle2\"}\r\n                  color={\"secondary\"}\r\n                  gutterBottom>Please read guidelines carefully below before uploading CSV(.csv) file.</Typography>\r\n\r\n\r\n      <Grid item xs={12} >\r\n        <ShowCaseTemplate classes={classes} variables={variables}/>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ShowCaseTemplate = (props)=>{\r\n  const {classes ,  variables} = props\r\n\r\n  const showCaseTextItems = variables.map((item)=>{\r\n    if(item?.format.toLowerCase() == \"text\"){\r\n      let no_of_variable = item?.no_of_variable\r\n      return(<>\r\n        <Typography variant={\"subtitle2\"}>You have <b>{no_of_variable}</b> text variable in below template.Make columns according to variable names like if variable name is <b>{\"{{1}}\"}</b> then make a column with name <b>1</b> and then put the values in it.\r\n          Variable name you can see in curly braces.</Typography><br/>\r\n        <Typography className={classes.templateText} variant={\"h5\"}>{item?.text}</Typography>\r\n      </>)\r\n    }else{\r\n      return (\r\n        <>\r\n          <Typography variant={\"subtitle2\"}>You have a <b>{item?.format.toLowerCase()}</b> variable in this template. Make a column in csv shown in below picture and put <b>{item?.format.toLowerCase()}</b> urls in it.</Typography>\r\n\r\n          {item?.format.toLowerCase() == \"video\" &&<img className={classes.showCaseImage} src={VideoShowCase}/>}\r\n          {item?.format.toLowerCase() == \"image\" &&<img src={ImageShowCase}/>}\r\n          {item?.format.toLowerCase() == \"audio\" &&<img src={AudioShowCase}/>}\r\n        </>\r\n      )\r\n    }\r\n  })\r\n    return(<>\r\n      <Typography variant={\"subtitle2\"}>Make a column named <b>to</b> shown in below picture and put the recipients phone number in it with country code.</Typography>\r\n        <img className={classes.showCaseImage} src={PhoneShowCase}/>\r\n      {showCaseTextItems}\r\n    </>)\r\n}\r\n\r\n\r\nconst FillingTemplates = (props)=>{\r\n  const {classes ,  variables , onVariableChange , templateData , templateName} = props\r\n\r\n  const variablesItem = variables.map((item)=>{\r\n    if(item?.format == \"text\"){\r\n      let no_of_variable = item?.no_of_variable\r\n      let variableIndexes = []\r\n      let templateString\r\n      let initialIndex = 0\r\n      for(let i = 1; i <= no_of_variable; i++){\r\n        let placeholder = `{{${i}}}`\r\n        let textString = item?.text.toString()\r\n        let index = textString.indexOf(placeholder)\r\n        let slicedString = textString.slice(initialIndex , index)\r\n        templateString = (<>\r\n          <Typography size={\"xs\"} variant={\"body1\"} component={\"span\"}>{slicedString}</Typography>\r\n          <input type={\"text\"} name={i.toString()} className={classes.variableInput} onChange={(e)=>onVariableChange(e ,item)}/>\r\n        </>)\r\n        variableIndexes.push(templateString)\r\n        initialIndex = parseInt(index)+parseInt(placeholder.length)\r\n      }\r\n      let joinedText = variableIndexes.map(item=>item)\r\n\r\n      return(<>\r\n        {joinedText}\r\n      </>)\r\n    }\r\n  })\r\n  const ifVariableLengthZero = templateData?.waba_templates.map((item)=>{\r\n    let tempString = \"\"\r\n    console.log(templateName)\r\n    console.log(item?.name)\r\n    if(item?.name == templateName){\r\n      if(item?.components?.length > 0){\r\n        let comp = item.components.map((it)=>{\r\n          if(it?.text != undefined && it.text != null){\r\n            tempString += it?.text\r\n          }\r\n        })\r\n      }\r\n      return <Typography size={\"xs\"} variant={\"body1\"} component={\"span\"}>{tempString}</Typography>\r\n    }\r\n  })\r\n  return(\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <br/>\r\n        {variables.map((item)=>{\r\n\r\n          if(item?.format == \"text\"){\r\n            return (\r\n              <>\r\n                <br/>\r\n                <Typography size={\"sm\"} variant={\"h6\"} weight={\"bold\"}>{item?.type}</Typography>\r\n                <br/>\r\n                {variablesItem}\r\n                <br/>\r\n              </>\r\n            )\r\n          }else {\r\n            return(\r\n              <>\r\n                <br/>\r\n                <Typography size={\"sm\"} variant={\"h6\"} weight={\"bold\"}>{item?.type}</Typography>\r\n                <br/>\r\n                <TextField variant={\"outlined\"}\r\n                           fullWidth\r\n                           onChange={(e)=>onVariableChange(e ,item)}\r\n                           placeholder={`Enter url of ${item?.format.toLowerCase()}`}/>\r\n                <br/>\r\n              </>\r\n            )\r\n          }\r\n        })}\r\n        {variables.length == 0 && <>\r\n          <Typography weight={\"bold\"} size={\"md\"}>Template name : {templateName}</Typography>\r\n          {ifVariableLengthZero}\r\n        </>}\r\n      </Grid>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nexport default function Broadcast(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const dispatch = useDispatch()\r\n  const store = useStore()\r\n  const templateData = useSelector((state)=>state.broadcast.templateMessages)\r\n\r\n  const error = useSelector((state)=>state.broadcast.error)\r\n  const responseVariableMessageId = useSelector((state)=>state.broadcast.variableMessageId)\r\n  const responseSendingBulkTemplateMsg = useSelector((state)=>state.broadcast.responseSendingBulkTemplateMsg)\r\n  const variables = useSelector((state)=>state.broadcast.variables)\r\n\r\n  //loader for sending request\r\n  const loading = useSelector((state)=>state.broadcast.loading)\r\n\r\n\r\n  // useEffect for message modal close\r\n  useEffect(()=>{\r\n      if(responseVariableMessageId != undefined && responseVariableMessageId != \"\"){\r\n        setOpenMessageModal(false)\r\n        setContactsFile(undefined)\r\n        setContactNumber(\"\")\r\n        setSelectedTemplate(undefined)\r\n        if(Object.keys(singleSendingLocalObj).length > 0){\r\n          setTimeout(()=>setDataInLocalStorage(singleSendingLocalObj), 5000)\r\n          setSingleSendingLocalObj({})\r\n        }\r\n      }\r\n  },[responseVariableMessageId])\r\n\r\n  useEffect(()=>{\r\n      if(Object.keys(responseSendingBulkTemplateMsg).length > 0){\r\n        setOpenBroadcastModal(false)\r\n        setContactsFile(undefined)\r\n        setBroadcastName(\"\")\r\n        setSelectedTemplate(undefined)\r\n        if(Object.keys(singleBulkLocalObj).length > 0){\r\n          setTimeout(()=>setDataInLocalStorage(singleBulkLocalObj), 5000)\r\n          setBulkSendingLocalObj({})\r\n        }\r\n      }\r\n  },[responseSendingBulkTemplateMsg])\r\n\r\n  // useEffect for fetching templates\r\n  useEffect(()=>{\r\n    dispatch(fetchTemplateMessages())\r\n  },[])\r\n\r\n\r\n\r\n  const [variableState, setVariableState] = useState([])\r\n  const [linkState, setLinkState] = useState([])\r\n\r\n\r\n  // broadcast modal state\r\n  const [openBroadcastModal, setOpenBroadcastModal] = useState(false)\r\n  const [currentBroadcastModalStepIndex, setBroadcastCurrentModalStepIndex] = useState(0)\r\n  const [broadcastName , setBroadcastName] = useState(\"\")\r\n  const [singleBulkLocalObj , setBulkSendingLocalObj] = useState({})\r\n\r\n\r\n  // single message modal state\r\n  const [openMessageModal, setOpenMessageModal] = useState(false)\r\n  const [currentMessageModalStepIndex, setMessageCurrentModalStepIndex] = useState(0)\r\n  const [contactNumber , setContactNumber] = useState(\"\")\r\n  const [selectedTemplate , setSelectedTemplate] = useState(undefined)\r\n  const [singleSendingLocalObj , setSingleSendingLocalObj] = useState({})\r\n\r\n\r\n\r\n  const [contactsFile , setContactsFile] = useState(undefined)\r\n  const [selectedDocument , setSelectedDocument] = useState(undefined)\r\n\r\n  \r\n  const onContactsFileLoad = ({target}) => {\r\n    console.log(target.files[0].name)\r\n    setContactsFile(target.files[0])\r\n  }\r\n  const onUploadCSV = ()=>{\r\n\r\n  }\r\n\r\n  const onSelectDocument = ({target}) => {\r\n    console.log(target.files[0].name)\r\n    setSelectedDocument(target.files[0])\r\n  }\r\n\r\n  const tplList = templateData?.waba_templates ? templateData?.waba_templates : []\r\n  const onChangeTemplate = (e , newValue)=>{\r\n    setSelectedTemplate(newValue)\r\n  }\r\n  const onChangeBroadcastName = (e)=> {\r\n    const name = e.target.value\r\n    setBroadcastName(name)\r\n  }\r\n\r\n  const BroadcastModalStepArray = [\r\n    <FirstStep\r\n      onChangeTemplate={onChangeTemplate}\r\n      onChangeBroadcastName={onChangeBroadcastName}\r\n      selectedTemplate={selectedTemplate}\r\n      broadcastName={broadcastName}\r\n      data={tplList}/>,\r\n    // <SecondStep onFileLoad={onSelectDocument}\r\n    // file={selectedDocument}\r\n    // classes={classes}/>,\r\n    <ThirdStep onFileLoad={onContactsFileLoad}\r\n               onUploadCSV={onUploadCSV}\r\n                file={contactsFile}\r\n                variables={variables}\r\n                classes={classes}/>]\r\n\r\n  const onChangeNumber = (value)=>{\r\n    setContactNumber(value)\r\n  }\r\n  const onVariableChange = (e, item )=>{\r\n    let name = e.target.name\r\n    let value = e.target.value\r\n    let format = item.format\r\n    let type = item.type\r\n    let variableObj = {\r\n      name,value\r\n    }\r\n    if(format == \"text\"){\r\n      let index = variableState.findIndex((item)=>item.type.toLowerCase() == type.toLowerCase())\r\n      let obj = {\r\n        type: type.toLowerCase(),\r\n        variable : [variableObj]\r\n      }\r\n\r\n      if(index != -1){\r\n        let copyOfVariableState = variableState\r\n        let variableArray = copyOfVariableState[index].variable\r\n        let variableIndex = variableArray.findIndex((item)=>item.name == name)\r\n        if(variableIndex != -1){\r\n          variableArray[variableIndex].value = value\r\n          copyOfVariableState[index].variable = variableArray\r\n          // console.log(copyOfVariableState)\r\n          setVariableState(copyOfVariableState)\r\n        }else{\r\n          let newArray = [...variableArray , variableObj]\r\n          copyOfVariableState[index].variable = newArray\r\n          setVariableState(copyOfVariableState)\r\n        }\r\n      }else{\r\n        // console.log(\"in else\")\r\n        let newArray = [...variableState , obj]\r\n        setVariableState(newArray)\r\n      }\r\n    }else{\r\n      let index = linkState.findIndex((item)=>item.format == format.toLowerCase())\r\n      let obj = {\r\n        type: type.toLowerCase(),\r\n        format:format.toLowerCase(),\r\n        link :value\r\n      }\r\n      let copyOfLinkState = linkState\r\n      if(index != -1){\r\n        copyOfLinkState[index].link = value\r\n        setLinkState(copyOfLinkState)\r\n      }else{\r\n        let newArray = [...copyOfLinkState , obj]\r\n        setLinkState(newArray)\r\n      }\r\n    }\r\n  }\r\n  const MessageModalStepArray = [\r\n    <PhoneNumberStep\r\n      number={contactNumber}\r\n      onChangeTemplate={onChangeTemplate}\r\n      onChangeNumber={onChangeNumber}\r\n      selectedTemplate={selectedTemplate}\r\n      classes={classes}\r\n      data={tplList} />,\r\n    <FillingTemplates\r\n      templateData={templateData}\r\n      classes={classes}\r\n      templateName={selectedTemplate?.name}\r\n      variables={variables}\r\n      onVariableChange={onVariableChange}\r\n    />\r\n    // <SecondStep onFileLoad={onSelectDocument}\r\n    //             file={selectedDocument}\r\n    //             classes={classes}/>\r\n  ]\r\n\r\n\r\n  //broadcast modal function\r\n  const onBroadcastModalNextClick = ()=>{\r\n\r\n    if(currentBroadcastModalStepIndex < BroadcastModalStepArray.length){\r\n      if(currentBroadcastModalStepIndex == BroadcastModalStepArray.length-1){\r\n        if(contactsFile && selectedTemplate && broadcastName){\r\n          let obj = new FormData()\r\n          obj.append(\"file\" , contactsFile)\r\n          obj.append(\"template_name\" , selectedTemplate.name)\r\n          obj.append(\"namespace\" , selectedTemplate.namespace)\r\n          obj.append(\"language\" , selectedTemplate.language)\r\n          obj.append(\"brodcast_name\" , broadcastName)\r\n          dispatch(sendBulkUploadTemplateMessage(obj))\r\n\r\n          const localObj = {\r\n            number : \"none\",\r\n            broadcast_name: broadcastName,\r\n            template_name : selectedTemplate?.name,\r\n            file : contactsFile?.name,\r\n            type : \"Broadcast\",\r\n            status : \"Sent\"\r\n          }\r\n          setBulkSendingLocalObj(localObj)\r\n        }\r\n      }else if(broadcastName.length > 4 && selectedTemplate){\r\n        let requestObj = {\r\n          template_name:selectedTemplate.name,\r\n          language: selectedTemplate.language,\r\n        }\r\n        dispatch(fetchVariablesFromTemplates(requestObj))\r\n        setBroadcastCurrentModalStepIndex(currentBroadcastModalStepIndex+1)\r\n      }\r\n    }\r\n\r\n  }\r\n  const onBroadcastModalCancelClick = ()=>{\r\n    setOpenBroadcastModal(false)\r\n    setContactsFile(undefined)\r\n    setBroadcastName(\"\")\r\n    setSelectedTemplate(undefined)\r\n  }\r\n  const addNewBroadCast = ()=>{\r\n    setOpenBroadcastModal(true)\r\n    setBroadcastCurrentModalStepIndex(0)\r\n  }\r\n  const userHistory = useSelector((state)=>state.broadcast.userHistory)\r\n  let [listData , setListData] = useState([])\r\n\r\n  useEffect(()=>{\r\n    dispatch(userHistoryData())\r\n  },[])\r\n  useEffect(()=>{\r\n    try {\r\n      // localStorage.removeItem(\"id_token\")\r\n      // localStorage.removeItem(\"messages\")\r\n      let newData = userHistory.map((item)=>{\r\n        return {\r\n          number : item?.number,\r\n          type : item?.type,\r\n          template_name : item?.template_name,\r\n          broadcast_name : item?.brodcast_name,\r\n          file : item?.file,\r\n          timestamp : item?.timestamp,\r\n          status : item?.status\r\n        }\r\n      })\r\n      newData.sort((a,b)=>{\r\n          if(new Date(timeConverter(a?.timestamp)) > new Date(timeConverter(b?.timestamp))){\r\n            return -1\r\n          }\r\n          if(new Date(timeConverter(a?.timestamp)) < new Date(timeConverter(b?.timestamp))){\r\n            return 1\r\n          }\r\n          return 0\r\n      })\r\n      setListData(newData)\r\n    }catch (e){\r\n      console.log(e)\r\n    }\r\n  },[userHistory])\r\n\r\n  //set data in localstorage\r\n  const setDataInLocalStorage = (obj)=>{\r\n    try{\r\n      dispatch(userHistoryData())\r\n      // let newData  = [...listData ,  obj]\r\n      // setListData(newData)\r\n    }catch (e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  //get data from localstorage\r\n  const getDataFromLocalStorage = (obj)=>{\r\n\r\n  }\r\n\r\n\r\n  //single sending modal function\r\n  const onMessageModalNextClick = ()=>{\r\n\r\n    if(currentMessageModalStepIndex < MessageModalStepArray.length){\r\n      if(currentMessageModalStepIndex == 0 && isValidPhoneNumber(contactNumber)\r\n        && selectedTemplate ){\r\n        let requestObj = {\r\n          template_name:selectedTemplate.name,\r\n          language: selectedTemplate.language,\r\n        }\r\n        dispatch(fetchVariablesFromTemplates(requestObj))\r\n        setMessageCurrentModalStepIndex(currentMessageModalStepIndex+1)\r\n      }else\r\n        if(currentMessageModalStepIndex ==1 && variableState != [] && linkState != []){\r\n        let requestObj = {}\r\n        if(linkState.length > 0){\r\n          requestObj = {\r\n            template_name:selectedTemplate.name,\r\n            language: selectedTemplate.language,\r\n            to:parseInt(contactNumber.slice(1,contactNumber.length)),\r\n            namespace:selectedTemplate.namespace,\r\n            parameters:variableState,\r\n            link:linkState,\r\n            broadcast_name: \"none\",\r\n          }\r\n        }else if(variableState.length > 0){\r\n          requestObj = {\r\n            template_name:selectedTemplate.name,\r\n            language: selectedTemplate.language,\r\n            to:parseInt(contactNumber.slice(1,contactNumber.length)),\r\n            namespace:selectedTemplate.namespace,\r\n            parameters:variableState,\r\n            broadcast_name: \"none\",\r\n          }\r\n        }else{\r\n          requestObj = {\r\n            template_name:selectedTemplate.name,\r\n            language: selectedTemplate.language,\r\n            to:parseInt(contactNumber.slice(1,contactNumber.length)),\r\n            namespace:selectedTemplate.namespace,\r\n            broadcast_name: \"none\",\r\n          }\r\n        }\r\n          const localObj = {\r\n            number : parseInt(contactNumber.slice(1,contactNumber.length)),\r\n            broadcast_name: \"none\",\r\n            template_name : selectedTemplate?.name,\r\n            file : \"none\",\r\n            type : \"Individual\",\r\n            status : \"Sent\"\r\n          }\r\n          setSingleSendingLocalObj(localObj)\r\n          dispatch(sendVariableTemplates(requestObj))\r\n      }\r\n    }\r\n  }\r\n  const onMessageModalCancelClick = ()=>{\r\n    setOpenMessageModal(false)\r\n    setContactsFile(undefined)\r\n    setContactNumber(\"\")\r\n    setSelectedTemplate(undefined)\r\n  }\r\n  const addNewMessage = ()=>{\r\n    setOpenMessageModal(true)\r\n    setMessageCurrentModalStepIndex(0)\r\n  }\r\n\r\n  const HeaderBtnComponent = ()=>(\r\n    <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        onClick={addNewBroadCast}\r\n        startIcon={<SendIcon/>}>New Broadcast</Button>\r\n      <Button\r\n        style={{marginLeft:\"20px\"}}\r\n        variant=\"contained\"\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        onClick={addNewMessage}\r\n        startIcon={<SendIcon/>}>New Message</Button>\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <Box margin={2}>\r\n      <PageTitle title=\"Braodcast History\"\r\n                 button={<HeaderBtnComponent/>} />\r\n      {/*broadcast modal*/}\r\n      <Modal title={\"New Broadcast\"}\r\n             onNext={onBroadcastModalNextClick}\r\n             loading={loading}\r\n             error={error}\r\n             theme={theme}\r\n             onCancel={onBroadcastModalCancelClick}\r\n             open={openBroadcastModal} >\r\n        {BroadcastModalStepArray[currentBroadcastModalStepIndex]}\r\n      </Modal>\r\n      {/*single sending modal*/}\r\n      <Modal title={\"New Message\"}\r\n             onNext={onMessageModalNextClick}\r\n             onCancel={onMessageModalCancelClick}\r\n             loading={loading}\r\n             error={error}\r\n             theme={theme}\r\n             open={openMessageModal} >\r\n        {MessageModalStepArray[currentMessageModalStepIndex]}\r\n      </Modal>\r\n      <Grid container spacing={4}>\r\n        {/*overview stats listing*/}\r\n        {/*<Grid item xs={12}>*/}\r\n        {/*  <Box display={\"flex\"} justifyContent={\"space-between\"}*/}\r\n\r\n        {/*       alignItems={\"center\"} textAlign={\"center\"}>*/}\r\n        {/*    {mock.randomOverview.map(d=>(*/}\r\n        {/*      <div>*/}\r\n        {/*        <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">*/}\r\n        {/*          {d}*/}\r\n        {/*        </Typography>*/}\r\n        {/*        <Typography variant={\"subtitle\"}>Delivered</Typography>*/}\r\n        {/*      </div>*/}\r\n        {/*    ))}*/}\r\n        {/*  </Box>*/}\r\n        {/*</Grid>*/}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Recipients List\"\r\n            upperTitle\r\n            noBodyPadding\r\n            disableWidgetMenu={true}\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={listData} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n      ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\mock.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\components\\Table\\Table.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\components\\BigStat\\BigStat.js",[],["415","416"],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\broadcast\\components\\BigStat\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Modal\\Modal.js",["417","418","419","420","421"],"import React from \"react\";\r\nimport {\r\n  Button, CircularProgress, createMuiTheme,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle, Divider, Grid, MuiThemeProvider,\r\n  TextField,withStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\n\r\nexport default function Modal({ theme,variant, children , title , open , onNext , onCancel , loading , error}) {\r\n  const dialogTheme = (theme)=>createMuiTheme({\r\n    overrides:{\r\n      MuiDialog:{\r\n        paper:{\r\n          width:\"100%\",\r\n        },\r\n      }\r\n    }\r\n  })\r\n  const ColorButton = withStyles(() => ({\r\n    root: {\r\n      color: theme.palette.secondary.contrastText,\r\n      backgroundColor:theme.palette.primary.main,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.primary.light\r\n      },\r\n    },\r\n  }))(Button);\r\n  const TextButton = withStyles(() => ({\r\n    root: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  }))(Button);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <MuiThemeProvider theme={dialogTheme}>\r\n          <Dialog maxWidth={\"sm\"} open={open}\r\n                  onClose={onCancel}\r\n                  aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <Divider/>\r\n            <DialogContent>\r\n              {children}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Typography size={\"sm\"} color={\"secondary\"}>{error && error?.message}</Typography>\r\n              <TextButton onClick={onCancel} color=\"primary\">\r\n                Cancel\r\n              </TextButton>\r\n              <ColorButton onClick={onNext}\r\n                      color=\"primary\" variant={\"contained\"}>\r\n                {loading ? <CircularProgress size={24} style={{ color: \"#fff\" }} />\r\n                  : \"Next\"\r\n                }\r\n              </ColorButton>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </MuiThemeProvider>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\components\\Modal\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\index.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\broadcast.js",["422","423","424"],"import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axiosInstance, customInstance, wabaInstance } from \"../../utils/axios-instance\";\r\nimport { responsiveFontSizes } from \"@material-ui/core\";\r\n// thunk actions\r\n\r\n//fetching templates\r\nexport const fetchTemplateMessages = createAsyncThunk('broadcast/fetchTemplateMessages',\r\n  async()=>{\r\n  const response = await axiosInstance.get(\"/v1/configs/templates\")\r\n    return response.data\r\n})\r\n\r\n//sending template messages without altering\r\nexport const sendTemplateMessage = createAsyncThunk('broadcast/sendTemplateMessage',\r\n  async(obj)=>{\r\n    const response = await axiosInstance.post(\"v1/messages\",obj)\r\n    return response.data\r\n  })\r\n\r\n//sending bulk upload templates without altering\r\nexport const sendBulkUploadTemplateMessage = createAsyncThunk('broadcast/sendBulkUploadTemplateMessage',\r\n  async(obj)=>{\r\n    const response = await axiosInstance.post(\"v1/bulk_send_template\",obj)\r\n    return response.data\r\n  })\r\n\r\n//get variable from templates\r\nexport const fetchVariablesFromTemplates = createAsyncThunk('broadcast/fetchVariablesFromTemplates',\r\n  async(obj)=>{\r\n    const response = await axiosInstance.post(\"v1/get_variables\",obj)\r\n    console.log(response.data)\r\n    return response.data\r\n  })\r\n\r\n\r\n//send variable templates\r\nexport const sendVariableTemplates = createAsyncThunk('broadcast/sendVariableTemplates',\r\n  async(obj)=>{\r\n    const response = await axiosInstance.post(\"v1/send_template\",obj)\r\n    console.log(response.data)\r\n    return response.data\r\n  })\r\n\r\n//user history data\r\nexport const userHistoryData = createAsyncThunk('users/userHistoryData',\r\n  async()=>{\r\n    const response = await axiosInstance.get(\"v1/user_history\")\r\n    return response.data\r\n  })\r\n\r\n\r\n\r\nexport const broadcastSlice = createSlice({\r\n  name:'broadcast',\r\n  initialState:{\r\n    value:0,\r\n    templateMessages : [],\r\n    responseSendingSingleTemplateMsg : {},\r\n    responseSendingBulkTemplateMsg : {},\r\n    variables:[],\r\n    loading:false,\r\n    error:undefined,\r\n    variableMessageId : undefined,\r\n    userHistory:[]\r\n  },\r\n  reducers:{\r\n    setTemplateMessages : (state,action)=>{\r\n      state.templateMessages = action.payload\r\n    }\r\n  },\r\n  extraReducers:builder=>{\r\n    builder.addCase(fetchTemplateMessages.pending , (state , action)=>{\r\n      state.loading = true\r\n      state.templateMessages = []\r\n    })\r\n      .addCase(fetchTemplateMessages.fulfilled,(state , action )=>{\r\n        state.loading = false\r\n        state.templateMessages = action.payload\r\n      })\r\n      .addCase(fetchTemplateMessages.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.templateMessages = []\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendTemplateMessage.pending, (state , action)=>{\r\n        state.loading = true\r\n        state.responseSendingSingleTemplateMsg = {}\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendTemplateMessage.fulfilled, (state , action)=>{\r\n        state.loading = false\r\n        state.responseSendingSingleTemplateMsg = action.payload\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendTemplateMessage.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.responseSendingSingleTemplateMsg = {}\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendBulkUploadTemplateMessage.pending, (state , action)=>{\r\n        state.loading = true\r\n        state.responseSendingBulkTemplateMsg = {}\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendBulkUploadTemplateMessage.fulfilled, (state , action)=>{\r\n        state.loading = false\r\n        state.responseSendingBulkTemplateMsg = action.payload\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendBulkUploadTemplateMessage.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.responseSendingBulkTemplateMsg = {}\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(fetchVariablesFromTemplates.pending, (state , action)=>{\r\n        state.loading = true\r\n        state.variables = []\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(fetchVariablesFromTemplates.fulfilled, (state , action)=>{\r\n        state.loading = false\r\n        state.variables = action.payload?.response\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(fetchVariablesFromTemplates.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.variables = {}\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendVariableTemplates.pending, (state , action)=>{\r\n        state.loading = true\r\n        state.variableMessageId = undefined\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendVariableTemplates.fulfilled, (state , action)=>{\r\n        state.loading = false\r\n        state.variableMessageId = action.payload?.success\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(sendVariableTemplates.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.variableMessageId = undefined\r\n        state.error = !!action.error && action.error\r\n      })\r\n      .addCase(userHistoryData.pending, (state , action)=>{\r\n        state.userHistory = []\r\n      })\r\n      .addCase(userHistoryData.fulfilled, (state , action)=>{\r\n        state.userHistory = action.payload?.activity\r\n      })\r\n      .addCase(userHistoryData.rejected, (state , action)=>{\r\n        state.userHistory = []\r\n      })\r\n  }\r\n})\r\n\r\nexport const {setTemplateMessages} = broadcastSlice.actions\r\n\r\nexport default broadcastSlice.reducer","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\utils\\axios-instance.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\Chat.js",["425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  TextField,\r\n  InputLabel,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  List,\r\n  Avatar,\r\n  Divider,\r\n  createMuiTheme,\r\n  MuiThemeProvider, IconButton, CircularProgress, Chip, ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport  Autocomplete from  \"@material-ui/lab/Autocomplete\"\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { CloudUpload, Description, Face, InsertPhoto, Send } from \"@material-ui/icons\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport { capitalize, removeUnderscoreAndCapitalize, timeConverter } from \"../../utils/date-parse\";\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Table from \"./components/Table/Table\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useDispatch , useStore , useSelector} from \"react-redux\";\r\nimport { setTemplateMessages , fetchTemplateMessages , sendTemplateMessage , sendBulkUploadTemplateMessage } from \"../../store/reducer/broadcast\";\r\nimport { getBackgroundChatHistory, sendMediaChat, setTemplateChatHistory } from \"../../store/reducer/chat\";\r\nimport PhoneInput from \"react-phone-number-input\"\r\nimport 'react-phone-number-input/style.css'\r\nimport {isValidPhoneNumber} from \"react-phone-number-input\"\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport { getContacts, getSelectedChatHistory } from \"../../store/reducer/chat\";\r\nimport classnames from \"classnames\";\r\nimport Av1 from \"../../images/av1.png\"\r\n\r\n\r\nexport default function Chat(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const dispatch = useDispatch()\r\n  const store = useStore()\r\n\r\n  const contacts = useSelector((state)=>state.chat.contacts)\r\n  const chatHistoryLoading = useSelector((state)=>state.chat.chatHistoryLoading)\r\n  const chatHistory = useSelector((state)=>state.chat.chatHistory)\r\n  const [selectedChat, setSelectedChat] = useState(null)\r\n  const [typedMsg, setTypedMsg] = useState(\"\")\r\n  const responseSendingSingleTemplateMsg = useSelector((state)=>state.broadcast.responseSendingSingleTemplateMsg)\r\n\r\n  const chatListRef = useRef(null)\r\n\r\n  let intRef= useRef()\r\n  let conRef = useRef()\r\n\r\n  const [chatWindowScroll , setChatWindowScroll] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    console.log(selectedChat)\r\n    setChatWindowScroll(true)\r\n  },[selectedChat])\r\n  useEffect(()=>{\r\n    let divHeight = chatListRef.current?.scrollHeight\r\n    if(divHeight != undefined){\r\n      if( chatListRef.current.scrollTop == 0 && chatWindowScroll){\r\n        chatListRef.current.scrollTop = divHeight;\r\n        console.log(\"inner\",chatWindowScroll)\r\n        setChatWindowScroll(false)\r\n      }\r\n    }\r\n    clearTimeout(intRef)\r\n    if(selectedChat != null){\r\n      intRef = setTimeout(()=>dispatch(getBackgroundChatHistory(selectedChat)) , 2000)\r\n    }\r\n  },[chatHistory])\r\n\r\n  useEffect(()=>{\r\n    dispatch(getContacts())\r\n    conRef = setInterval(()=>{\r\n      dispatch(getContacts())\r\n    },5000)\r\n    return ()=>{\r\n      clearTimeout(conRef)\r\n    }\r\n  },[])\r\n\r\n\r\n  const ListTheme = ()=>createMuiTheme({\r\n    overrides:{\r\n      MuiList:{\r\n        root:{\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const AvatarArray = [\r\n    Av1\r\n  ]\r\n\r\n\r\n\r\n  const ChatListItem = ({title , onClickItem , id , unseenCount})=>{\r\n    return(\r\n    <>\r\n      <MuiThemeProvider theme={ListTheme} key={title}>\r\n        <ListItem\r\n          className={id == selectedChat ? classes.selectedRecipientList : classes.recipientList} disableGutters button onClick={()=>onClickItem(id)}>\r\n          <ListItemAvatar>\r\n            <Avatar src={AvatarArray[0]} />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={title} className={unseenCount !== 0 && classes.bold}/>\r\n          {unseenCount != 0 &&<ListItemText primary={unseenCount}\r\n                                             className={unseenCount !=0 && classes.bold}/>}\r\n        </ListItem>\r\n      </MuiThemeProvider>\r\n      </>\r\n  )}\r\n\r\n  const onClickItem = (item)=>{\r\n    if(item !== null){\r\n      clearInterval(intRef)\r\n      setSelectedChat(item)\r\n      dispatch(getSelectedChatHistory(item))\r\n    }\r\n  }\r\n\r\n  const onFileLoad = ({target}) => {\r\n    let file = target.files[0]\r\n    let url  =  URL.createObjectURL(file)\r\n    let obj = new FormData()\r\n    obj.append(\"file\" , file)\r\n    obj.append(\"phone\" , selectedChat)\r\n    obj.append(\"caption\" , \"\")\r\n    let newMsg = {\r\n      fromMe: true,\r\n      filename: file?.name,\r\n      image: url,\r\n      url: url,\r\n      send_type: \"single\",\r\n      status: \"sending\",\r\n      type: \"image\",\r\n      phone: selectedChat,\r\n      timestamp: 1643197893,\r\n      _id: \"gBEGkXhRiGVlAgnRrgK6hgWe5_M\"\r\n    }\r\n    let newChatHistory = [...chatHistory , newMsg]\r\n    dispatch(setTemplateChatHistory(newChatHistory))\r\n    dispatch(sendMediaChat(obj))\r\n  }\r\n\r\n  const sendMsg = (e)=>{\r\n    if(e.keyCode == 13 || e.keyCode == undefined){\r\n      if(typedMsg != null && selectedChat != null){\r\n        let obj = {\r\n          phone: selectedChat ,\r\n          type: \"text\",\r\n          text: typedMsg.toString()\r\n        }\r\n        let newMsg = {\r\n          fromMe: true,\r\n          phone: selectedChat,\r\n          text: {body: typedMsg},\r\n          send_type: \"single\",\r\n          status: \"delivered\",\r\n          timestamp: 1643197893,\r\n          type: \"text\",\r\n          _id: \"gBEGkXhRiGVlAgnRrgK6hgWe5_M\"\r\n        }\r\n        dispatch(sendTemplateMessage(obj))\r\n        let newChatHistory = [...chatHistory , newMsg]\r\n        dispatch(setTemplateChatHistory(newChatHistory))\r\n        // setTimeout(()=>dispatch(getSelectedChatHistory(selectedChat)),1000)\r\n        setTypedMsg(\"\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const getChatListItems = () => {\r\n\r\n    let listItems = contacts.map((item)=>(\r\n        <ChatListItem title={item?._id} id={item?._id}\r\n                      unseenCount={item?.unseen_count}\r\n                      onClickItem={onClickItem}\r\n        />\r\n    ))\r\n    return listItems\r\n  }\r\n\r\n  const getStatusText = (param)=>{\r\n    if(param == \"read\"){\r\n      return(\r\n        <Typography variant={\"caption\"}\r\n                    color={\"primary\"}\r\n                    className={classes.read}\r\n                    style={{marginRight:\"10px\"}}>\r\n          {capitalize(param)}\r\n        </Typography>\r\n      )\r\n    }else if(param == \"failed\"){\r\n      return (\r\n        <Typography variant={\"caption\"}\r\n                    color={\"secondary\"}\r\n                    className={classes.failed}\r\n                    style={{marginRight:\"10px\"}}>\r\n          {capitalize(param)}\r\n        </Typography>\r\n      )\r\n    }else{\r\n      return (\r\n        <Typography variant={\"caption\"}\r\n                    color={\"secondary\"}\r\n                    style={{marginRight:\"10px\", color:\"#797979\"}}>\r\n          { capitalize(param)}\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const GetMessages = ({classes, item})=>{\r\n    if(item?.type == \"template\") {\r\n      return (\r\n        <>\r\n          <div className={classnames(classes.msgText , classes.templateMsgBlock,\r\n            item?.fromMe ? classes.fromMe : classes.fromSender)}>\r\n            <div className={classes.flexTitle}>\r\n              <Typography variant={\"h6\"} className={classes.templateHeading}>\r\n                Template\r\n              </Typography>\r\n              <Chip label={capitalize(item?.send_type)} className={classes.templateChip}/>\r\n            </div>\r\n              <Typography  size={\"body1\"}>\r\n                {item?.text?.name}\r\n              </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant={\"caption\"}\r\n                        style={{marginRight:\"10px\", color:\"#797979\"}}>\r\n              {item?.timestamp && timeConverter(item?.timestamp)}\r\n            </Typography>\r\n            {item?.status && getStatusText(item?.status)}\r\n          </div>\r\n        </>\r\n      )\r\n    }else if(item?.type == \"text\"){\r\n      return (\r\n        <>\r\n          <Typography className={classnames(classes.msgText,\r\n            item?.fromMe ? classes.fromMe : classes.fromSender)} size={\"sm\"}>\r\n            {item?.text?.body}\r\n          </Typography>\r\n          <div>\r\n            <Typography variant={\"caption\"}\r\n                        style={{marginRight:\"10px\", color:\"#797979\"}}>\r\n              {item?.timestamp && timeConverter(item?.timestamp)}\r\n            </Typography>\r\n            {item?.status && getStatusText(item?.status)}\r\n          </div>\r\n        </>\r\n      )\r\n    }else if(item?.type == \"image\"){\r\n      return (\r\n        <>\r\n          <div className={classnames(classes.msgText , classes.templateMsgBlock ,\r\n            item?.fromMe ? classes.fromMe : classes.fromSender)}>\r\n            <div className={classes.flexTitle}>\r\n              <Typography variant={\"h6\"} className={classes.templateHeading}>\r\n                {removeUnderscoreAndCapitalize(item?.filename)}\r\n              </Typography>\r\n            </div>\r\n            <img src={item?.image} style={{width:\"200px\"}}/>\r\n          </div>\r\n          <div>\r\n            <Typography variant={\"caption\"}\r\n                        style={{marginRight:\"10px\", color:\"#797979\"}}>\r\n              {item?.timestamp && timeConverter(item?.timestamp)}\r\n            </Typography>\r\n            {item?.status && getStatusText(item?.status)}\r\n          </div>\r\n        </>\r\n      )\r\n    }else{\r\n      return (<div/>)\r\n    }\r\n  }\r\n\r\n  const lastDateOfChat = []\r\n  Object.assign(lastDateOfChat , chatHistory)\r\n  const d = lastDateOfChat.reverse().filter(item=>item?.fromMe != true)\r\n  const timestamp = d[0]?.timestamp ? timeConverter(parseInt(d[0]?.timestamp)+(24*3600)) : null\r\n  const chatDisabled = timestamp ? new Date(timestamp) < new Date() : false\r\n\r\n  return (\r\n    <Grid container className={classes.chatWindow}>\r\n      <Grid item xs={4}>\r\n        <Typography variant={\"h5\"} style={{marginLeft:\"10px\", fontWeight:\"bold\"}}>Chats</Typography>\r\n        <br/>\r\n        <List style={{height:\"64vh\" , overflowY:\"scroll\" , display:\"flex\",overflowX:\"hidden\",\r\n          flexDirection:\"column\",alignItems:\"center\"}}>\r\n          {getChatListItems()}\r\n        </List>\r\n      </Grid>\r\n      <Grid item xs={8} className={classes.chatWrapperGrid}>\r\n        <ListItem className={classes.recipientTitle} disableGutters>\r\n          <ListItemAvatar>\r\n            <Avatar src={AvatarArray[0]} />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={selectedChat ? selectedChat : \"Recipient name\"}\r\n          secondary={timestamp && (chatDisabled ? \"Your chat is disabled\" :`Your chat will be active till ${timestamp}`)}\r\n          /><br/>\r\n        </ListItem>\r\n        <div className={classes.chatList}>\r\n          <Box flex={1}\r\n               className={chatHistoryLoading || chatHistory.length ==0 ?\r\n                 classes.beforeLoading : classes.afterLoading}>\r\n            {chatHistoryLoading\r\n              ?<CircularProgress style={{width:\"100px\" , height:\"100px\"}}/>\r\n              :\r\n              <div ref={chatListRef}>\r\n                {chatHistory.length > 0\r\n                  ? <>\r\n                    {chatHistory.map((item)=>{\r\n\r\n                      if(item?.phone == selectedChat){\r\n                        if(item.fromMe){\r\n                          return(\r\n                            <Box className={classes.rightMsg}>\r\n                              <GetMessages classes={classes} item={item}/>\r\n                            </Box>\r\n                          )\r\n                        }else{\r\n                          return (\r\n                            <Box className={classes.leftMsg}>\r\n                              <GetMessages classes={classes} item={item}/>\r\n                            </Box>\r\n                          )\r\n                        }\r\n                      }\r\n                    })}\r\n                  </>\r\n                  : <Typography size={\"xl\"}>You don't have messages yet</Typography>\r\n                }\r\n              </div>\r\n            }\r\n          </Box>\r\n          <Box display={\"flex\"} className={classes.inputText}>\r\n            <TextField\r\n              fullWidth\r\n              value={typedMsg}\r\n              disabled={chatDisabled}\r\n              placeholder={\"Type your message here\"}\r\n              variant={\"outlined\"}\r\n              onKeyDown={sendMsg}\r\n              onChange={(e)=>setTypedMsg(e.target.value)}/>\r\n            <IconButton disabled={chatDisabled} color={\"primary\"} onClick={sendMsg}>\r\n              <Send/>\r\n            </IconButton>\r\n            <div>\r\n              <input\r\n                accept=\".png,.jpg,.jpeg\"\r\n                className={classes.inputFile}\r\n                id=\"contained-button-file\"\r\n                onChange={onFileLoad}\r\n                disabled={chatDisabled}\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <IconButton disabled={chatDisabled} color={\"secondary\"} component={\"span\"}>\r\n                  <InsertPhoto />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\mock.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\chat\\components\\Table\\Table.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\login.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\chat.js",["468","469"],"import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport setAuthorizationToken, { axiosInstance} from \"../../utils/axios-instance\";\r\n// thunk actions\r\n\r\n//get contacts\r\nexport const getContacts = createAsyncThunk('chat/getContacts',\r\n  async(obj)=>{\r\n  const response = await axiosInstance.get(\"contacts\")\r\n    return response.data\r\n})\r\n\r\n// fetch selected chat\r\nexport const getSelectedChatHistory = createAsyncThunk('chat/getSelectedChatHistory',\r\n  async(number)=>{\r\n    const response = await axiosInstance.get(`/v1/history?phone=${number}`)\r\n    return response.data\r\n  })\r\n\r\n\r\n// fetch selected chat\r\nexport const getBackgroundChatHistory = createAsyncThunk('chat/getBackgroundChatHistory',\r\n  async(number)=>{\r\n    const response = await axiosInstance.get(`/v1/history?phone=${number}`)\r\n    return response.data\r\n  })\r\n\r\n\r\n// send media chat\r\nexport const sendMediaChat = createAsyncThunk('chat/sendMediaChat',\r\n  async(obj)=>{\r\n    const response = await axiosInstance.post(`/v1/media` ,obj)\r\n    return response.data\r\n  })\r\n\r\n\r\nexport const chatSlice = createSlice({\r\n  name:'chat',\r\n  initialState:{\r\n    contacts:[],\r\n    loading:false,\r\n    chatHistoryLoading:false,\r\n    mediaSendingLoading:false,\r\n    chatHistory:[\r\n      {\r\n        \"_id\": \"gBEGkXMHR2JkAglXW9yegcttOOM\",\r\n        \"send_type\":\"broadcast\",\r\n        \"title\":\"if broadcast name otherwise / null\",\r\n        \"fromMe\": false,\r\n        \"phone\": 918890293146,\r\n        \"status\": \"read\",\r\n        \"text\": {\r\n          \"name\": \"1sttemplate\"\r\n        },\r\n        \"timestamp\": 1641228843,\r\n        \"type\": \"template\"\r\n      },\r\n      {\r\n        \"_id\": \"gBEGkXMHR2JkAglXW9yegcttOOM\",\r\n        \"send_type\":\"broadcast\",\r\n        \"title\":\"kjasfnaklfsnmlk\",\r\n        \"fromMe\": false,\r\n        \"phone\": 918890293146,\r\n        \"status\": \"read\",\r\n        \"text\": {\r\n          \"name\": \"1sttemplate\"\r\n        },\r\n        \"timestamp\": 1641228843,\r\n        \"type\": \"template\"\r\n      },\r\n      {\r\n        \"_id\": \"gBEGkXMHR2JkAglXW9yegcttOOM\",\r\n        \"send_type\":\"broadcast\",\r\n        \"title\":\"if broadcast name otherwise / null\",\r\n        \"fromMe\": true,\r\n        \"phone\": 918890293146,\r\n        \"status\": \"read\",\r\n        \"text\": {\r\n          \"name\": \"1sttemplate\"\r\n        },\r\n        \"timestamp\": 1641228843,\r\n        \"type\": \"template\"\r\n      },\r\n      {\r\n        \"_id\": \"gBEGkXMHR2JkAglXW9yegcttOOM\",\r\n        \"send_type\":\"broadcast\",\r\n        \"title\":\"if broadcast name otherwise / null\",\r\n        \"fromMe\": true,\r\n        \"phone\": 918890293146,\r\n        \"status\": \"read\",\r\n        \"text\": {\r\n          \"name\": \"1sttemplate\"\r\n        },\r\n        \"timestamp\": 1641228843,\r\n        \"type\": \"template\"\r\n      }\r\n\r\n    ],\r\n    error:null\r\n  },\r\n  reducers:{\r\n    setTemplateChatHistory:(state  , action)=>{\r\n      state.chatHistory = action.payload\r\n    }\r\n  },\r\n  extraReducers:builder=>{\r\n    builder.addCase(getContacts.pending , (state , action)=>{\r\n      state.loading = true\r\n      state.error = null\r\n    })\r\n      .addCase(getContacts.fulfilled,(state , action )=>{\r\n        state.loading = false\r\n        state.error = null\r\n        state.contacts = action.payload?.contacts\r\n      })\r\n      .addCase(getContacts.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(getSelectedChatHistory.pending,(state , action )=>{\r\n        state.chatHistoryLoading = true\r\n        state.error = null\r\n      })\r\n      .addCase(getSelectedChatHistory.fulfilled, (state , action)=>{\r\n        state.chatHistoryLoading = false\r\n        state.error = false\r\n        state.chatHistory = action.payload?.messages\r\n      })\r\n      .addCase(getSelectedChatHistory.rejected, (state , action)=>{\r\n        state.chatHistoryLoading = false\r\n        state.error = true\r\n      })\r\n      .addCase(sendMediaChat.pending,(state , action )=>{\r\n        state.mediaSendingLoading = true\r\n        state.error = null\r\n      })\r\n      .addCase(sendMediaChat.fulfilled, (state , action)=>{\r\n        state.mediaSendingLoading = false\r\n        state.error = false\r\n      })\r\n      .addCase(sendMediaChat.rejected, (state , action)=>{\r\n        state.mediaSendingLoading = false\r\n        state.error = true\r\n      })\r\n      .addCase(getBackgroundChatHistory .pending,(state , action )=>{\r\n        state.error = null\r\n      })\r\n      .addCase(getBackgroundChatHistory.fulfilled, (state , action)=>{\r\n        state.error = false\r\n        state.chatHistory = action.payload?.messages\r\n      })\r\n      .addCase(getBackgroundChatHistory.rejected, (state , action)=>{\r\n        state.error = true\r\n      })\r\n  }\r\n})\r\nexport const {setTemplateChatHistory} = chatSlice.actions\r\n\r\nexport default chatSlice.reducer","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\utils\\use-interval.js",["470","471"],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\utils\\date-parse.js",["472"],"export function timeConverter(UNIX_timestamp){\r\n  let a = new Date(UNIX_timestamp * 1000);\r\n  let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n  let year = a.getFullYear();\r\n  let month = months[a.getMonth()];\r\n  let date = a.getDate();\r\n  let hour = a.getHours();\r\n  let min = a.getMinutes();\r\n  let sec = a.getSeconds();\r\n  let time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min\r\n    // + ':' + sec ;\r\n  return time;\r\n}\r\n\r\n\r\nexport function capitalize(string){\r\n  return string?.toString().charAt(0).toUpperCase().concat(string?.toString().slice(1))\r\n}\r\n\r\nexport function removeUnderscoreAndCapitalize(string){\r\n  return string?.toString().charAt(0).toUpperCase().concat(string?.toString().slice(1)).replaceAll(\"_\",\" \")\r\n}","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\styles.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\mock.js",[],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\components\\Table\\Table.js",["473","474","475","476","477"],"C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\pages\\users\\Users.js",["478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button, Box, TextField, InputLabel, Divider, MuiThemeProvider, createMuiTheme,\r\n} from \"@material-ui/core\";\r\nimport  Autocomplete from  \"@material-ui/lab/Autocomplete\"\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { CloudUpload, Description } from \"@material-ui/icons\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport ImageShowCase from \"../../images/image-column.PNG\"\r\nimport AudioShowCase from \"../../images/audio.PNG\"\r\nimport VideoShowCase from \"../../images/video-column.PNG\"\r\nimport PhoneShowCase from \"../../images/phone-number.PNG\"\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Table from \"./components/Table/Table\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useDispatch , useStore , useSelector} from \"react-redux\";\r\nimport PhoneInput from \"react-phone-number-input\"\r\nimport 'react-phone-number-input/style.css'\r\nimport {isValidPhoneNumber} from \"react-phone-number-input\"\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { timeConverter } from \"../../utils/date-parse\";\r\nimport { downloadHistoryData, downloadUserHistoryData, getUsers } from \"../../store/reducer/users\";\r\n\r\n\r\nconst PhoneNumberStep = ({onChangeNumber ,number, classes})=>{\r\n  return(\r\n    <div>\r\n      <Typography size={\"sm\"}>Enter phone number</Typography>\r\n      <PhoneInput\r\n        style={{marginTop:\"5px\"}}\r\n        international\r\n        onCountryChange={(countryCode) => {\r\n          console.log(countryCode)\r\n        }}\r\n        defaultCountry=\"IN\"\r\n        autoComplete=\"on\"\r\n        value={number}\r\n        className={classes.phoneNumberInput}\r\n        countryCallingCodeEditable={false}\r\n        onChange={onChangeNumber}\r\n        error={\r\n          number\r\n            ? isValidPhoneNumber(number)\r\n              ? undefined\r\n              : \"Invalid Phone Number\"\r\n            : ``\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function Users(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const dispatch = useDispatch()\r\n  const store = useStore()\r\n  const userList = useSelector((state)=>state.users.usersList)\r\n\r\n  const error = useSelector((state)=>state.users.error)\r\n  const chatHistoryDownloaded = useSelector((state)=>state.users.chatHistoryDownloaded)\r\n\r\n  //loader for sending request\r\n  const loading = useSelector((state)=>state.users.loading)\r\n\r\n  // useEffect for get users\r\n  useEffect(()=>{\r\n    dispatch(getUsers())\r\n  },[])\r\n\r\n  // open chat modal state\r\n  const [openChatModal, setOpenChatModal] = useState(false)\r\n  const [currentChatModalStepIndex, setChatCurrentModalStepIndex] = useState(0)\r\n  const [contactNumber , setContactNumber] = useState(\"\")\r\n\r\n  const onChangeNumber = (value)=>{\r\n    setContactNumber(value)\r\n  }\r\n  const ChatHistoryModal = [\r\n    <PhoneNumberStep\r\n      number={contactNumber}\r\n      onChangeNumber={onChangeNumber}\r\n      classes={classes}/>\r\n  ]\r\n  useEffect(()=>{\r\n    if(chatHistoryDownloaded){\r\n      setOpenChatModal(false)\r\n    }\r\n  },[chatHistoryDownloaded])\r\n\r\n  \r\n  const onDownloadHistory = (user)=>{\r\n    if(user != \"\" && user != undefined){\r\n      var formData = new FormData()\r\n      formData.append(\"user\" , user)\r\n      dispatch(downloadHistoryData(formData))\r\n    }\r\n  }\r\n\r\n  const onChatModalNextClick = ()=>{\r\n    if(currentUser != \"\" && contactNumber !=\"\"){\r\n      var formData = new FormData()\r\n      let cNumber = contactNumber.slice(1 , contactNumber.length)\r\n      formData.append(\"phone\" , cNumber)\r\n      formData.append(\"user\" , currentUser)\r\n      dispatch(downloadUserHistoryData(formData))\r\n    }\r\n  }\r\n  const onChatModalCancelClick = ()=>{\r\n    setCurrentUser(\"\")\r\n    setOpenChatModal(false)\r\n    setContactNumber(\"\")\r\n  }\r\n\r\n  const [currentUser , setCurrentUser] = useState(\"\")\r\n\r\n  const onDownloadUserHistory = (user)=>{\r\n    setCurrentUser(user)\r\n    setOpenChatModal(true)\r\n    setChatCurrentModalStepIndex(0)\r\n  }\r\n\r\n\r\n  return (\r\n    <Box margin={2}>\r\n      <PageTitle title=\"Users History\" />\r\n      {/*single sending modal*/}\r\n      <Modal title={\"Download Chat History\"}\r\n             onNext={onChatModalNextClick}\r\n             onCancel={onChatModalCancelClick}\r\n             loading={loading}\r\n             error={error}\r\n             theme={theme}\r\n             open={openChatModal} >\r\n        {ChatHistoryModal[currentChatModalStepIndex]}\r\n      </Modal>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"User List\"\r\n            upperTitle\r\n            noBodyPadding\r\n            disableWidgetMenu={true}\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table\r\n              data={userList}\r\n              onDownloadHistory={onDownloadHistory}\r\n              onDownloadUserHistory={onDownloadUserHistory}/>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","C:\\Users\\karan\\Documents\\freelance projects\\react-material-admin\\src\\store\\reducer\\users.js",["501","502","503"],"import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axiosInstance, customInstance, downloadCSVFileInstance, wabaInstance } from \"../../utils/axios-instance\";\r\nimport { responsiveFontSizes } from \"@material-ui/core\";\r\n// thunk actions\r\n\r\n//get Users list\r\nexport const getUsers = createAsyncThunk('users/getUsers',\r\n  async()=>{\r\n    const response = await axiosInstance.get(\"/get_users\")\r\n    return response.data\r\n  })\r\n\r\n//download history data\r\nexport const downloadHistoryData = createAsyncThunk('users/downloadHistoryData',\r\n  async(data)=>{\r\n    const response = await downloadCSVFileInstance.post(\"/download_history\", data)\r\n    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', 'download-history.csv'); //or any other extension\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    return response.data\r\n  })\r\n\r\n//download user history data\r\nexport const downloadUserHistoryData = createAsyncThunk('users/downloadUserHistoryData',\r\n  async(data)=>{\r\n    const response = await downloadCSVFileInstance.post(\"v1/download_user_history\",data)\r\n    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', 'download-history.csv'); //or any other extension\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    return response.data\r\n  })\r\n\r\nexport const usersSlice = createSlice({\r\n  name:'users',\r\n  initialState:{\r\n    usersList:[],\r\n    chatHistoryDownloaded : false,\r\n    loading:false,\r\n    error:undefined,\r\n  },\r\n  extraReducers:builder=>{\r\n    builder.addCase(getUsers.pending , (state , action)=>{\r\n      state.loading = true\r\n      state.usersList = []\r\n      state.error = undefined\r\n    })\r\n      .addCase(getUsers.fulfilled,(state , action )=>{\r\n        state.loading = false\r\n        state.usersList = action.payload?.user_id\r\n      })\r\n      .addCase(getUsers.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.usersList = []\r\n        state.error = !!action.error && action.error\r\n      })\r\n    .addCase(downloadUserHistoryData.pending , (state , action)=>{\r\n      state.loading = true\r\n      state.chatHistoryDownloaded = false\r\n\r\n    })\r\n      .addCase(downloadUserHistoryData.fulfilled,(state , action )=>{\r\n        state.loading = false\r\n        state.chatHistoryDownloaded = true\r\n      })\r\n      .addCase(downloadUserHistoryData.rejected, (state , action)=>{\r\n        state.loading = false\r\n        state.error = !!action.error && action.error\r\n        state.chatHistoryDownloaded = false\r\n\r\n      })\r\n  }\r\n})\r\n\r\nexport default usersSlice.reducer",{"ruleId":"504","severity":1,"message":"505","line":4,"column":10,"nodeType":"506","messageId":"507","endLine":4,"endColumn":21},{"ruleId":"504","severity":1,"message":"508","line":12,"column":10,"nodeType":"506","messageId":"507","endLine":12,"endColumn":22},{"ruleId":"504","severity":1,"message":"509","line":13,"column":24,"nodeType":"506","messageId":"507","endLine":13,"endColumn":32},{"ruleId":"510","severity":1,"message":"511","line":31,"column":5,"nodeType":"512","endLine":31,"endColumn":7,"suggestions":"513"},{"ruleId":"504","severity":1,"message":"514","line":9,"column":9,"nodeType":"506","messageId":"507","endLine":9,"endColumn":12},{"ruleId":"504","severity":1,"message":"515","line":9,"column":14,"nodeType":"506","messageId":"507","endLine":9,"endColumn":24},{"ruleId":"504","severity":1,"message":"516","line":9,"column":26,"nodeType":"506","messageId":"507","endLine":9,"endColumn":30},{"ruleId":"504","severity":1,"message":"517","line":10,"column":8,"nodeType":"506","messageId":"507","endLine":10,"endColumn":12},{"ruleId":"504","severity":1,"message":"518","line":14,"column":18,"nodeType":"506","messageId":"507","endLine":14,"endColumn":30},{"ruleId":"504","severity":1,"message":"519","line":15,"column":17,"nodeType":"506","messageId":"507","endLine":15,"endColumn":28},{"ruleId":"504","severity":1,"message":"520","line":16,"column":16,"nodeType":"506","messageId":"507","endLine":16,"endColumn":26},{"ruleId":"504","severity":1,"message":"521","line":27,"column":8,"nodeType":"506","messageId":"507","endLine":27,"endColumn":17},{"ruleId":"504","severity":1,"message":"522","line":10,"column":9,"nodeType":"506","messageId":"507","endLine":10,"endColumn":18},{"ruleId":"504","severity":1,"message":"523","line":14,"column":8,"nodeType":"506","messageId":"507","endLine":14,"endColumn":18},{"ruleId":"504","severity":1,"message":"524","line":21,"column":8,"nodeType":"506","messageId":"507","endLine":21,"endColumn":18},{"ruleId":"504","severity":1,"message":"525","line":22,"column":8,"nodeType":"506","messageId":"507","endLine":22,"endColumn":14},{"ruleId":"504","severity":1,"message":"509","line":25,"column":24,"nodeType":"506","messageId":"507","endLine":25,"endColumn":32},{"ruleId":"504","severity":1,"message":"526","line":27,"column":10,"nodeType":"506","messageId":"507","endLine":27,"endColumn":15},{"ruleId":"504","severity":1,"message":"527","line":37,"column":8,"nodeType":"506","messageId":"507","endLine":37,"endColumn":17},{"ruleId":"504","severity":1,"message":"528","line":37,"column":19,"nodeType":"506","messageId":"507","endLine":37,"endColumn":31},{"ruleId":"529","severity":1,"message":"530","line":119,"column":19,"nodeType":"531","messageId":"532","endLine":125,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":144,"column":19,"nodeType":"531","messageId":"532","endLine":150,"endColumn":21},{"ruleId":"504","severity":1,"message":"533","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":13},{"ruleId":"504","severity":1,"message":"534","line":4,"column":11,"nodeType":"506","messageId":"507","endLine":4,"endColumn":19},{"ruleId":"504","severity":1,"message":"535","line":7,"column":24,"nodeType":"506","messageId":"507","endLine":7,"endColumn":41},{"ruleId":"504","severity":1,"message":"536","line":8,"column":17,"nodeType":"506","messageId":"507","endLine":8,"endColumn":31},{"ruleId":"504","severity":1,"message":"537","line":9,"column":17,"nodeType":"506","messageId":"507","endLine":9,"endColumn":31},{"ruleId":"504","severity":1,"message":"538","line":10,"column":16,"nodeType":"506","messageId":"507","endLine":10,"endColumn":25},{"ruleId":"504","severity":1,"message":"539","line":11,"column":21,"nodeType":"506","messageId":"507","endLine":11,"endColumn":32},{"ruleId":"504","severity":1,"message":"540","line":12,"column":19,"nodeType":"506","messageId":"507","endLine":12,"endColumn":30},{"ruleId":"504","severity":1,"message":"541","line":13,"column":18,"nodeType":"506","messageId":"507","endLine":13,"endColumn":25},{"ruleId":"504","severity":1,"message":"542","line":25,"column":8,"nodeType":"506","messageId":"507","endLine":25,"endColumn":11},{"ruleId":"543","severity":1,"message":"544","line":197,"column":23,"nodeType":"545","messageId":"546","endLine":197,"endColumn":25},{"ruleId":"504","severity":1,"message":"547","line":6,"column":3,"nodeType":"506","messageId":"507","endLine":6,"endColumn":12},{"ruleId":"504","severity":1,"message":"548","line":8,"column":3,"nodeType":"506","messageId":"507","endLine":8,"endColumn":11},{"ruleId":"504","severity":1,"message":"549","line":9,"column":3,"nodeType":"506","messageId":"507","endLine":9,"endColumn":6},{"ruleId":"504","severity":1,"message":"516","line":10,"column":3,"nodeType":"506","messageId":"507","endLine":10,"endColumn":7},{"ruleId":"504","severity":1,"message":"550","line":14,"column":18,"nodeType":"506","messageId":"507","endLine":14,"endColumn":26},{"ruleId":"504","severity":1,"message":"535","line":15,"column":24,"nodeType":"506","messageId":"507","endLine":15,"endColumn":41},{"ruleId":"504","severity":1,"message":"551","line":17,"column":13,"nodeType":"506","messageId":"507","endLine":17,"endColumn":23},{"ruleId":"504","severity":1,"message":"552","line":18,"column":11,"nodeType":"506","messageId":"507","endLine":18,"endColumn":19},{"ruleId":"504","severity":1,"message":"553","line":27,"column":10,"nodeType":"506","messageId":"507","endLine":27,"endColumn":15},{"ruleId":"504","severity":1,"message":"554","line":27,"column":29,"nodeType":"506","messageId":"507","endLine":27,"endColumn":35},{"ruleId":"504","severity":1,"message":"555","line":28,"column":8,"nodeType":"506","messageId":"507","endLine":28,"endColumn":20},{"ruleId":"504","severity":1,"message":"556","line":29,"column":8,"nodeType":"506","messageId":"507","endLine":29,"endColumn":18},{"ruleId":"504","severity":1,"message":"557","line":37,"column":27,"nodeType":"506","messageId":"507","endLine":37,"endColumn":34},{"ruleId":"504","severity":1,"message":"509","line":38,"column":24,"nodeType":"506","messageId":"507","endLine":38,"endColumn":32},{"ruleId":"504","severity":1,"message":"558","line":38,"column":35,"nodeType":"506","messageId":"507","endLine":38,"endColumn":46},{"ruleId":"504","severity":1,"message":"559","line":42,"column":7,"nodeType":"506","messageId":"507","endLine":42,"endColumn":15},{"ruleId":"504","severity":1,"message":"560","line":73,"column":7,"nodeType":"506","messageId":"507","endLine":73,"endColumn":20},{"ruleId":"504","severity":1,"message":"561","line":103,"column":7,"nodeType":"506","messageId":"507","endLine":103,"endColumn":19},{"ruleId":"504","severity":1,"message":"562","line":106,"column":8,"nodeType":"506","messageId":"507","endLine":106,"endColumn":16},{"ruleId":"504","severity":1,"message":"563","line":106,"column":18,"nodeType":"506","messageId":"507","endLine":106,"endColumn":29},{"ruleId":"504","severity":1,"message":"564","line":107,"column":8,"nodeType":"506","messageId":"507","endLine":107,"endColumn":21},{"ruleId":"504","severity":1,"message":"565","line":107,"column":23,"nodeType":"506","messageId":"507","endLine":107,"endColumn":39},{"ruleId":"504","severity":1,"message":"566","line":108,"column":8,"nodeType":"506","messageId":"507","endLine":108,"endColumn":25},{"ruleId":"504","severity":1,"message":"567","line":108,"column":27,"nodeType":"506","messageId":"507","endLine":108,"endColumn":47},{"ruleId":"504","severity":1,"message":"568","line":109,"column":8,"nodeType":"506","messageId":"507","endLine":109,"endColumn":29},{"ruleId":"504","severity":1,"message":"569","line":109,"column":31,"nodeType":"506","messageId":"507","endLine":109,"endColumn":55},{"ruleId":"504","severity":1,"message":"570","line":111,"column":8,"nodeType":"506","messageId":"507","endLine":111,"endColumn":20},{"ruleId":"504","severity":1,"message":"571","line":111,"column":22,"nodeType":"506","messageId":"507","endLine":111,"endColumn":35},{"ruleId":"504","severity":1,"message":"572","line":4,"column":27,"nodeType":"506","messageId":"507","endLine":4,"endColumn":37},{"ruleId":"504","severity":1,"message":"573","line":4,"column":39,"nodeType":"506","messageId":"507","endLine":4,"endColumn":46},{"ruleId":"504","severity":1,"message":"574","line":4,"column":48,"nodeType":"506","messageId":"507","endLine":4,"endColumn":64},{"ruleId":"504","severity":1,"message":"575","line":4,"column":66,"nodeType":"506","messageId":"507","endLine":4,"endColumn":80},{"ruleId":"504","severity":1,"message":"576","line":17,"column":8,"nodeType":"506","messageId":"507","endLine":17,"endColumn":12},{"ruleId":"504","severity":1,"message":"577","line":25,"column":3,"nodeType":"506","messageId":"507","endLine":25,"endColumn":22},{"ruleId":"504","severity":1,"message":"578","line":27,"column":3,"nodeType":"506","messageId":"507","endLine":27,"endColumn":22},{"ruleId":"504","severity":1,"message":"579","line":34,"column":10,"nodeType":"506","messageId":"507","endLine":34,"endColumn":23},{"ruleId":"504","severity":1,"message":"580","line":109,"column":7,"nodeType":"506","messageId":"507","endLine":109,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":150,"column":32,"nodeType":"545","messageId":"546","endLine":150,"endColumn":34},{"ruleId":"504","severity":1,"message":"581","line":159,"column":40,"nodeType":"506","messageId":"507","endLine":159,"endColumn":51},{"ruleId":"543","severity":1,"message":"544","line":214,"column":35,"nodeType":"545","messageId":"546","endLine":214,"endColumn":37},{"ruleId":"543","severity":1,"message":"544","line":226,"column":39,"nodeType":"545","messageId":"546","endLine":226,"endColumn":41},{"ruleId":"582","severity":1,"message":"583","line":226,"column":52,"nodeType":"584","endLine":226,"endColumn":112},{"ruleId":"543","severity":1,"message":"544","line":227,"column":39,"nodeType":"545","messageId":"546","endLine":227,"endColumn":41},{"ruleId":"582","severity":1,"message":"583","line":227,"column":52,"nodeType":"584","endLine":227,"endColumn":78},{"ruleId":"543","severity":1,"message":"544","line":228,"column":39,"nodeType":"545","messageId":"546","endLine":228,"endColumn":41},{"ruleId":"582","severity":1,"message":"583","line":228,"column":52,"nodeType":"584","endLine":228,"endColumn":78},{"ruleId":"582","severity":1,"message":"583","line":235,"column":9,"nodeType":"584","endLine":235,"endColumn":69},{"ruleId":"585","severity":1,"message":"586","line":244,"column":45,"nodeType":"587","messageId":"588","endLine":244,"endColumn":47},{"ruleId":"543","severity":1,"message":"544","line":245,"column":21,"nodeType":"545","messageId":"546","endLine":245,"endColumn":23},{"ruleId":"585","severity":1,"message":"586","line":269,"column":71,"nodeType":"587","messageId":"588","endLine":269,"endColumn":73},{"ruleId":"543","severity":1,"message":"544","line":273,"column":19,"nodeType":"545","messageId":"546","endLine":273,"endColumn":21},{"ruleId":"504","severity":1,"message":"589","line":275,"column":13,"nodeType":"506","messageId":"507","endLine":275,"endColumn":17},{"ruleId":"585","severity":1,"message":"590","line":275,"column":44,"nodeType":"587","messageId":"591","endLine":275,"endColumn":46},{"ruleId":"543","severity":1,"message":"592","line":276,"column":23,"nodeType":"545","messageId":"546","endLine":276,"endColumn":25},{"ruleId":"543","severity":1,"message":"544","line":290,"column":27,"nodeType":"545","messageId":"546","endLine":290,"endColumn":29},{"ruleId":"543","severity":1,"message":"544","line":315,"column":27,"nodeType":"545","messageId":"546","endLine":315,"endColumn":29},{"ruleId":"504","severity":1,"message":"593","line":330,"column":9,"nodeType":"506","messageId":"507","endLine":330,"endColumn":14},{"ruleId":"543","severity":1,"message":"592","line":344,"column":36,"nodeType":"545","messageId":"546","endLine":344,"endColumn":38},{"ruleId":"543","severity":1,"message":"592","line":344,"column":78,"nodeType":"545","messageId":"546","endLine":344,"endColumn":80},{"ruleId":"510","severity":1,"message":"594","line":354,"column":5,"nodeType":"512","endLine":354,"endColumn":32,"suggestions":"595"},{"ruleId":"510","severity":1,"message":"596","line":367,"column":5,"nodeType":"512","endLine":367,"endColumn":37,"suggestions":"597"},{"ruleId":"510","severity":1,"message":"511","line":372,"column":5,"nodeType":"512","endLine":372,"endColumn":7,"suggestions":"598"},{"ruleId":"504","severity":1,"message":"599","line":397,"column":10,"nodeType":"506","messageId":"507","endLine":397,"endColumn":26},{"ruleId":"504","severity":1,"message":"600","line":408,"column":9,"nodeType":"506","messageId":"507","endLine":408,"endColumn":25},{"ruleId":"543","severity":1,"message":"544","line":449,"column":15,"nodeType":"545","messageId":"546","endLine":449,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":450,"column":75,"nodeType":"545","messageId":"546","endLine":450,"endColumn":77},{"ruleId":"543","severity":1,"message":"592","line":456,"column":16,"nodeType":"545","messageId":"546","endLine":456,"endColumn":18},{"ruleId":"543","severity":1,"message":"544","line":459,"column":71,"nodeType":"545","messageId":"546","endLine":459,"endColumn":73},{"ruleId":"543","severity":1,"message":"592","line":460,"column":26,"nodeType":"545","messageId":"546","endLine":460,"endColumn":28},{"ruleId":"543","severity":1,"message":"544","line":476,"column":59,"nodeType":"545","messageId":"546","endLine":476,"endColumn":61},{"ruleId":"543","severity":1,"message":"592","line":483,"column":16,"nodeType":"545","messageId":"546","endLine":483,"endColumn":18},{"ruleId":"543","severity":1,"message":"544","line":517,"column":41,"nodeType":"545","messageId":"546","endLine":517,"endColumn":43},{"ruleId":"510","severity":1,"message":"511","line":563,"column":5,"nodeType":"512","endLine":563,"endColumn":7,"suggestions":"601"},{"ruleId":"504","severity":1,"message":"602","line":606,"column":9,"nodeType":"506","messageId":"507","endLine":606,"endColumn":32},{"ruleId":"543","severity":1,"message":"544","line":615,"column":39,"nodeType":"545","messageId":"546","endLine":615,"endColumn":41},{"ruleId":"543","severity":1,"message":"544","line":624,"column":41,"nodeType":"545","messageId":"546","endLine":624,"endColumn":43},{"ruleId":"543","severity":1,"message":"592","line":624,"column":62,"nodeType":"545","messageId":"546","endLine":624,"endColumn":64},{"ruleId":"543","severity":1,"message":"592","line":624,"column":81,"nodeType":"545","messageId":"546","endLine":624,"endColumn":83},{"ruleId":"504","severity":1,"message":"603","line":774,"column":10,"nodeType":"506","messageId":"507","endLine":774,"endColumn":26},{"ruleId":"604","replacedBy":"605"},{"ruleId":"606","replacedBy":"607"},{"ruleId":"504","severity":1,"message":"608","line":7,"column":3,"nodeType":"506","messageId":"507","endLine":7,"endColumn":20},{"ruleId":"504","severity":1,"message":"609","line":9,"column":3,"nodeType":"506","messageId":"507","endLine":9,"endColumn":12},{"ruleId":"504","severity":1,"message":"610","line":12,"column":10,"nodeType":"506","messageId":"507","endLine":12,"endColumn":18},{"ruleId":"504","severity":1,"message":"523","line":13,"column":8,"nodeType":"506","messageId":"507","endLine":13,"endColumn":18},{"ruleId":"504","severity":1,"message":"611","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":17},{"ruleId":"504","severity":1,"message":"612","line":2,"column":25,"nodeType":"506","messageId":"507","endLine":2,"endColumn":39},{"ruleId":"504","severity":1,"message":"613","line":2,"column":41,"nodeType":"506","messageId":"507","endLine":2,"endColumn":53},{"ruleId":"504","severity":1,"message":"614","line":3,"column":10,"nodeType":"506","messageId":"507","endLine":3,"endColumn":29},{"ruleId":"504","severity":1,"message":"554","line":4,"column":3,"nodeType":"506","messageId":"507","endLine":4,"endColumn":9},{"ruleId":"504","severity":1,"message":"572","line":7,"column":3,"nodeType":"506","messageId":"507","endLine":7,"endColumn":13},{"ruleId":"504","severity":1,"message":"573","line":13,"column":3,"nodeType":"506","messageId":"507","endLine":13,"endColumn":10},{"ruleId":"504","severity":1,"message":"615","line":15,"column":57,"nodeType":"506","messageId":"507","endLine":15,"endColumn":80},{"ruleId":"504","severity":1,"message":"616","line":17,"column":9,"nodeType":"506","messageId":"507","endLine":17,"endColumn":21},{"ruleId":"504","severity":1,"message":"552","line":19,"column":8,"nodeType":"506","messageId":"507","endLine":19,"endColumn":16},{"ruleId":"504","severity":1,"message":"617","line":20,"column":10,"nodeType":"506","messageId":"507","endLine":20,"endColumn":21},{"ruleId":"504","severity":1,"message":"618","line":20,"column":23,"nodeType":"506","messageId":"507","endLine":20,"endColumn":34},{"ruleId":"504","severity":1,"message":"619","line":20,"column":36,"nodeType":"506","messageId":"507","endLine":20,"endColumn":40},{"ruleId":"504","severity":1,"message":"576","line":25,"column":8,"nodeType":"506","messageId":"507","endLine":25,"endColumn":12},{"ruleId":"504","severity":1,"message":"620","line":26,"column":8,"nodeType":"506","messageId":"507","endLine":26,"endColumn":14},{"ruleId":"504","severity":1,"message":"621","line":27,"column":8,"nodeType":"506","messageId":"507","endLine":27,"endColumn":17},{"ruleId":"504","severity":1,"message":"622","line":29,"column":8,"nodeType":"506","messageId":"507","endLine":29,"endColumn":13},{"ruleId":"504","severity":1,"message":"533","line":30,"column":8,"nodeType":"506","messageId":"507","endLine":30,"endColumn":13},{"ruleId":"504","severity":1,"message":"577","line":32,"column":10,"nodeType":"506","messageId":"507","endLine":32,"endColumn":29},{"ruleId":"504","severity":1,"message":"623","line":32,"column":32,"nodeType":"506","messageId":"507","endLine":32,"endColumn":53},{"ruleId":"504","severity":1,"message":"624","line":32,"column":78,"nodeType":"506","messageId":"507","endLine":32,"endColumn":107},{"ruleId":"504","severity":1,"message":"625","line":34,"column":8,"nodeType":"506","messageId":"507","endLine":34,"endColumn":18},{"ruleId":"504","severity":1,"message":"626","line":36,"column":9,"nodeType":"506","messageId":"507","endLine":36,"endColumn":27},{"ruleId":"504","severity":1,"message":"579","line":37,"column":10,"nodeType":"506","messageId":"507","endLine":37,"endColumn":23},{"ruleId":"504","severity":1,"message":"627","line":38,"column":10,"nodeType":"506","messageId":"507","endLine":38,"endColumn":23},{"ruleId":"504","severity":1,"message":"628","line":46,"column":7,"nodeType":"506","messageId":"507","endLine":46,"endColumn":12},{"ruleId":"504","severity":1,"message":"593","line":48,"column":9,"nodeType":"506","messageId":"507","endLine":48,"endColumn":14},{"ruleId":"504","severity":1,"message":"629","line":55,"column":9,"nodeType":"506","messageId":"507","endLine":55,"endColumn":41},{"ruleId":"543","severity":1,"message":"592","line":70,"column":18,"nodeType":"545","messageId":"546","endLine":70,"endColumn":20},{"ruleId":"543","severity":1,"message":"544","line":71,"column":41,"nodeType":"545","messageId":"546","endLine":71,"endColumn":43},{"ruleId":"510","severity":1,"message":"630","line":79,"column":16,"nodeType":"631","endLine":79,"endColumn":87},{"ruleId":"510","severity":1,"message":"632","line":85,"column":14,"nodeType":"631","endLine":87,"endColumn":12},{"ruleId":"543","severity":1,"message":"544","line":114,"column":25,"nodeType":"545","messageId":"546","endLine":114,"endColumn":27},{"ruleId":"543","severity":1,"message":"592","line":119,"column":24,"nodeType":"545","messageId":"546","endLine":119,"endColumn":26},{"ruleId":"543","severity":1,"message":"592","line":120,"column":69,"nodeType":"545","messageId":"546","endLine":120,"endColumn":71},{"ruleId":"543","severity":1,"message":"544","line":159,"column":18,"nodeType":"545","messageId":"546","endLine":159,"endColumn":20},{"ruleId":"543","severity":1,"message":"544","line":159,"column":37,"nodeType":"545","messageId":"546","endLine":159,"endColumn":39},{"ruleId":"543","severity":1,"message":"544","line":197,"column":14,"nodeType":"545","messageId":"546","endLine":197,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":206,"column":20,"nodeType":"545","messageId":"546","endLine":206,"endColumn":22},{"ruleId":"543","severity":1,"message":"544","line":228,"column":19,"nodeType":"545","messageId":"546","endLine":228,"endColumn":21},{"ruleId":"543","severity":1,"message":"544","line":252,"column":25,"nodeType":"545","messageId":"546","endLine":252,"endColumn":27},{"ruleId":"543","severity":1,"message":"544","line":268,"column":25,"nodeType":"545","messageId":"546","endLine":268,"endColumn":27},{"ruleId":"582","severity":1,"message":"583","line":278,"column":13,"nodeType":"584","endLine":278,"endColumn":61},{"ruleId":"543","severity":1,"message":"592","line":296,"column":64,"nodeType":"545","messageId":"546","endLine":296,"endColumn":66},{"ruleId":"543","severity":1,"message":"544","line":321,"column":68,"nodeType":"545","messageId":"546","endLine":321,"endColumn":70},{"ruleId":"585","severity":1,"message":"586","line":329,"column":44,"nodeType":"587","messageId":"588","endLine":329,"endColumn":46},{"ruleId":"543","severity":1,"message":"544","line":331,"column":38,"nodeType":"545","messageId":"546","endLine":331,"endColumn":40},{"ruleId":"504","severity":1,"message":"633","line":2,"column":8,"nodeType":"506","messageId":"507","endLine":2,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":144,"column":16,"nodeType":"636","messageId":"637","endLine":144,"endColumn":49,"fix":"638"},{"ruleId":"504","severity":1,"message":"639","line":1,"column":17,"nodeType":"506","messageId":"507","endLine":1,"endColumn":26},{"ruleId":"504","severity":1,"message":"640","line":1,"column":28,"nodeType":"506","messageId":"507","endLine":1,"endColumn":36},{"ruleId":"504","severity":1,"message":"641","line":9,"column":7,"nodeType":"506","messageId":"507","endLine":9,"endColumn":10},{"ruleId":"504","severity":1,"message":"642","line":8,"column":3,"nodeType":"506","messageId":"507","endLine":8,"endColumn":7},{"ruleId":"504","severity":1,"message":"643","line":12,"column":41,"nodeType":"506","messageId":"507","endLine":12,"endColumn":54},{"ruleId":"504","severity":1,"message":"552","line":13,"column":8,"nodeType":"506","messageId":"507","endLine":13,"endColumn":16},{"ruleId":"504","severity":1,"message":"644","line":15,"column":7,"nodeType":"506","messageId":"507","endLine":15,"endColumn":13},{"ruleId":"504","severity":1,"message":"645","line":22,"column":9,"nodeType":"506","messageId":"507","endLine":22,"endColumn":16},{"ruleId":"504","severity":1,"message":"554","line":4,"column":3,"nodeType":"506","messageId":"507","endLine":4,"endColumn":9},{"ruleId":"504","severity":1,"message":"609","line":4,"column":16,"nodeType":"506","messageId":"507","endLine":4,"endColumn":25},{"ruleId":"504","severity":1,"message":"572","line":4,"column":27,"nodeType":"506","messageId":"507","endLine":4,"endColumn":37},{"ruleId":"504","severity":1,"message":"573","line":4,"column":39,"nodeType":"506","messageId":"507","endLine":4,"endColumn":46},{"ruleId":"504","severity":1,"message":"574","line":4,"column":48,"nodeType":"506","messageId":"507","endLine":4,"endColumn":64},{"ruleId":"504","severity":1,"message":"575","line":4,"column":66,"nodeType":"506","messageId":"507","endLine":4,"endColumn":80},{"ruleId":"504","severity":1,"message":"616","line":6,"column":9,"nodeType":"506","messageId":"507","endLine":6,"endColumn":21},{"ruleId":"504","severity":1,"message":"552","line":8,"column":8,"nodeType":"506","messageId":"507","endLine":8,"endColumn":16},{"ruleId":"504","severity":1,"message":"617","line":9,"column":10,"nodeType":"506","messageId":"507","endLine":9,"endColumn":21},{"ruleId":"504","severity":1,"message":"618","line":9,"column":23,"nodeType":"506","messageId":"507","endLine":9,"endColumn":34},{"ruleId":"504","severity":1,"message":"646","line":12,"column":8,"nodeType":"506","messageId":"507","endLine":12,"endColumn":21},{"ruleId":"504","severity":1,"message":"647","line":13,"column":8,"nodeType":"506","messageId":"507","endLine":13,"endColumn":21},{"ruleId":"504","severity":1,"message":"648","line":14,"column":8,"nodeType":"506","messageId":"507","endLine":14,"endColumn":21},{"ruleId":"504","severity":1,"message":"649","line":15,"column":8,"nodeType":"506","messageId":"507","endLine":15,"endColumn":21},{"ruleId":"504","severity":1,"message":"576","line":17,"column":8,"nodeType":"506","messageId":"507","endLine":17,"endColumn":12},{"ruleId":"504","severity":1,"message":"579","line":27,"column":10,"nodeType":"506","messageId":"507","endLine":27,"endColumn":23},{"ruleId":"504","severity":1,"message":"643","line":28,"column":10,"nodeType":"506","messageId":"507","endLine":28,"endColumn":23},{"ruleId":"504","severity":1,"message":"593","line":65,"column":9,"nodeType":"506","messageId":"507","endLine":65,"endColumn":14},{"ruleId":"510","severity":1,"message":"511","line":77,"column":5,"nodeType":"512","endLine":77,"endColumn":7,"suggestions":"650"},{"ruleId":"543","severity":1,"message":"592","line":101,"column":13,"nodeType":"545","messageId":"546","endLine":101,"endColumn":15},{"ruleId":"543","severity":1,"message":"592","line":101,"column":27,"nodeType":"545","messageId":"546","endLine":101,"endColumn":29},{"ruleId":"543","severity":1,"message":"592","line":109,"column":20,"nodeType":"545","messageId":"546","endLine":109,"endColumn":22},{"ruleId":"543","severity":1,"message":"592","line":109,"column":43,"nodeType":"545","messageId":"546","endLine":109,"endColumn":45},{"ruleId":"504","severity":1,"message":"612","line":2,"column":25,"nodeType":"506","messageId":"507","endLine":2,"endColumn":39},{"ruleId":"504","severity":1,"message":"613","line":2,"column":66,"nodeType":"506","messageId":"507","endLine":2,"endColumn":78},{"ruleId":"504","severity":1,"message":"614","line":3,"column":10,"nodeType":"506","messageId":"507","endLine":3,"endColumn":29},"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'useUserState' is defined but never used.","'useStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["651"],"'Box' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Dashboard' is defined but never used.","'FormLabel' is defined but never used.","'classnames' is defined but never used.","'notBotLogo' is defined but never used.","'google' is defined but never used.","'Label' is defined but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Modal' is defined but never used.","'HomeIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputBase' is defined but never used.","'MenuItem' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'signOut' is defined but never used.","'useSelector' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'InputLabel' is defined but never used.","'Divider' is defined but never used.","'MuiThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'mock' is defined but never used.","'setTemplateMessages' is defined but never used.","'sendTemplateMessage' is defined but never used.","'useRouteMatch' is defined but never used.","'SecondStep' is assigned a value but never used.","'onUploadCSV' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'comp' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Expected '!==' and instead saw '!='.","'store' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setDataInLocalStorage' and 'singleSendingLocalObj'. Either include them or remove the dependency array.",["652"],"React Hook useEffect has missing dependencies: 'setDataInLocalStorage' and 'singleBulkLocalObj'. Either include them or remove the dependency array.",["653"],["654"],"'selectedDocument' is assigned a value but never used.","'onSelectDocument' is assigned a value but never used.",["655"],"'getDataFromLocalStorage' is assigned a value but never used.","'getMainChartData' is defined but never used.","no-native-reassign",["656"],"no-negated-in-lhs",["657"],"'DialogContentText' is defined but never used.","'TextField' is defined but never used.","'useTheme' is defined but never used.","'useStyles' is defined but never used.","'customInstance' is defined but never used.","'wabaInstance' is defined but never used.","'responsiveFontSizes' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Autocomplete' is defined but never used.","'CloudUpload' is defined but never used.","'Description' is defined but never used.","'Face' is defined but never used.","'Widget' is defined but never used.","'PageTitle' is defined but never used.","'Table' is defined but never used.","'fetchTemplateMessages' is defined but never used.","'sendBulkUploadTemplateMessage' is defined but never used.","'PhoneInput' is defined but never used.","'isValidPhoneNumber' is defined but never used.","'AccountCircle' is defined but never used.","'theme' is assigned a value but never used.","'responseSendingSingleTemplateMsg' is assigned a value but never used.","Assignments to the 'intRef' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'conRef' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'setAuthorizationToken' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property pending.","MemberExpression","unexpectedWhitespace",{"range":"658","text":"659"},"'useEffect' is defined but never used.","'useState' is defined but never used.","'sec' is assigned a value but never used.","'Chip' is defined but never used.","'timeConverter' is defined but never used.","'states' is assigned a value but never used.","'classes' is assigned a value but never used.","'ImageShowCase' is defined but never used.","'AudioShowCase' is defined but never used.","'VideoShowCase' is defined but never used.","'PhoneShowCase' is defined but never used.",["660"],{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"661","fix":"667"},{"desc":"661","fix":"668"},"no-global-assign","no-unsafe-negation",[4264,4266],".",{"desc":"661","fix":"669"},"Update the dependencies array to be: [dispatch]",{"range":"670","text":"671"},"Update the dependencies array to be: [responseVariableMessageId, setDataInLocalStorage, singleSendingLocalObj]",{"range":"672","text":"673"},"Update the dependencies array to be: [responseSendingBulkTemplateMsg, setDataInLocalStorage, singleBulkLocalObj]",{"range":"674","text":"675"},{"range":"676","text":"671"},{"range":"677","text":"671"},{"range":"678","text":"671"},[839,841],"[dispatch]",[12602,12629],"[responseVariableMessageId, setDataInLocalStorage, singleSendingLocalObj]",[13058,13090],"[responseSendingBulkTemplateMsg, setDataInLocalStorage, singleBulkLocalObj]",[13196,13198],[19562,19564],[2688,2690]]